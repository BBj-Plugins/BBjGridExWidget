rem /**
rem  *  The module contains a collection of classes to manipulate the grid's statusbar
rem  */
rem package GxStatusBar
rem /**
rem  * This file is part of the BBjGridExWidget plugin.
rem  * (c) Basis Europe <eu@basis.com>
rem  *
rem  * For the full copyright and license information, please view the LICENSE
rem  * file that was distributed with this source code.
rem  */
use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidget
use java.util.LinkedHashMap
use com.google.gson.JsonArray
use com.google.gson.JsonObject
use com.google.gson.Gson
use java.util.HashSet
rem /**
rem  * An interface which defines a status bar component
rem  *
REM  * @author Hyyan Abo Fakher
rem  */
interface public GxStatusBarComponentInterface
    rem /**
    rem  * Get the component name
    rem  *
    rem  * @returns BBjString the component name
    rem  *
    rem  * @deprecated use `getId()` instead
    rem  */

    method public static BBjString NAME()
    rem /**
    rem  * Get the component id
    rem  *
    rem  * @returns BBjString the component unique id
    rem  */

    method public static BBjString getId()
    rem /**
    rem  * Set the component alignment
    rem  *
    rem  * @param BBjString alignment$ "right", "left" or "center"
    rem  */

    method public void setAlignment(BBjString alignment!)
    rem /**
    rem  * Get the component alignment
    rem  *
    rem  * @returns BBjString the component alignment
    rem  */

    method public BBjString getAlignment()
    rem /**
    rem  * Get the component's JSON representation
    rem  *
    rem  * @return JsonObject
    rem  */

    method public JsonObject getAsJsonObject()

interfaceend
rem /**
rem  * An Abstract implementation for GxStatusBarComponentInterface
rem  *
REM  * @author Hyyan Abo Fakher
rem  */
class public GxStatusBarComponent implements GxStatusBarComponentInterface
    rem /**
    rem  * The component alignment
    rem  */
    field public BBjString Alignment! = "left"
    rem /**
    rem  * Constructor
    rem  *
    rem  * @param BBjString alignment! "right", "left" or "center"
    rem  */
    method public GxStatusBarComponent(BBjString alignment!)
        #Alignment! = alignment!
    methodend
    rem /**
    rem  * Get the component's JSON representation
    rem  *
    rem  * @return JsonObject
    rem  */
    method public JsonObject getAsJsonObject()
        declare JsonObject json!

        json! = new JsonObject()
        json!.addProperty("statusPanel",#getId())
        json!.addProperty("align",#getAlignment())
        methodret json!
    methodend

classend
rem /**
rem  * A statusbar component which provides the selected row count
rem  *
REM  * @author Hyyan Abo Fakher
rem  */
class public GxStatusBarSelectedRowCountComponent extends GxStatusBarComponent
    rem /**
    rem  * Constructor
    rem  *
    rem  * @param BBjString alignment! "right", "left" or "center"
    rem  */
    method public GxStatusBarSelectedRowCountComponent(BBjString alignment!)
        #super!(alignment!)
    methodend
    rem /**
    rem  * {@inheritDoc}
    rem  */
    method public static BBjString NAME()
        methodret GxStatusBarSelectedRowCountComponent.getId()
    methodend
    rem /**
    rem  * {@inheritDoc}
    rem  */
    method public static BBjString getId()
        methodret "agSelectedRowCountComponent"
    methodend

classend
rem /**
rem  * A statusbar component which provides the filtered row count.
rem  *
REM  * @author Hyyan Abo Fakher
rem  */
class public GxStatusBarFilteredRowCountComponent extends GxStatusBarComponent
    rem /**
    rem  * Constructor
    rem  *
    rem  * @param BBjString alignment! "right", "left" or "center"
    rem  */
    method public GxStatusBarFilteredRowCountComponent(BBjString alignment!)
        #super!(alignment!)
    methodend
    rem /**
    rem  * {@inheritDoc}
    rem  */
    method public static BBjString NAME()
        methodret GxStatusBarFilteredRowCountComponent.getId()
    methodend
    rem /**
    rem  * {@inheritDoc}
    rem  */
    method public static BBjString getId()
        methodret "agFilteredRowCountComponent"
    methodend

classend
rem /**
rem  * A statusbar component which provides the total and filtered row count.
rem  *
REM  * @author Hyyan Abo Fakher
rem  */
class public GxStatusBarTotalAndFilteredRowCountComponent extends GxStatusBarComponent
    rem /**
    rem  * Constructor
    rem  *
    rem  * @param BBjString alignment! "right", "left" or "center"
    rem  */
    method public GxStatusBarTotalAndFilteredRowCountComponent(BBjString alignment!)
        #super!(alignment!)
    methodend
    rem /**
    rem  * {@inheritDoc}
    rem  */
    method public static BBjString NAME()
        methodret GxStatusBarTotalAndFilteredRowCountComponent.getId()
    methodend
    rem /**
    rem  * {@inheritDoc}
    rem  */
    method public static BBjString getId()
        methodret "agTotalAndFilteredRowCountComponent"
    methodend

classend
rem /**
rem  * A statusbar component which provides the total row count.
rem  *
REM  * @author Hyyan Abo Fakher
rem  */
class public GxStatusBarTotalRowCountComponent extends GxStatusBarComponent
    rem /**
    rem  * Constructor
    rem  *
    rem  * @param BBjString alignment! "right", "left" or "center"
    rem  */
    method public GxStatusBarTotalRowCountComponent(BBjString alignment!)
        #super!(alignment!)
    methodend
    rem /**
    rem  * {@inheritDoc}
    rem  */
    method public static BBjString NAME()
        methodret GxStatusBarTotalRowCountComponent.getId()
    methodend
    rem /**
    rem  * {@inheritDoc}
    rem  */
    method public static BBjString getId()
        methodret "agTotalRowCountComponent"
    methodend

classend
rem /**
rem  * A statusbar component which provides aggregations on the selected range.
rem  *
REM  * @author Hyyan Abo Fakher
rem  */
class public GxStatusBarAggregationComponent extends GxStatusBarComponent
    rem /**
    rem  * agg functions to show on the panel. possible values are: 'count', 'sum', 'min', 'max', 'avg'
    rem  */
    field public HashSet AggFuncs! =  new HashSet()
    rem /**
    rem  * Construct new Aggregation Component
    rem  */
    method public GxStatusBarAggregationComponent()
        #fillHashSetWithDefault()
    methodend
    rem /**
    rem  * Construct new Aggregation Component
    rem  *
    rem  * @param BBjString alignment! "right", "left" or "center"
    rem  */
    method public GxStatusBarAggregationComponent(BBjString alignment!)
        #super!(alignment!)
        #fillHashSetWithDefault()
    methodend
    rem /**
    rem  * {@inheritDoc}
    rem  */
    method public static BBjString NAME()
        methodret GxStatusBarAggregationComponent.getId()
    methodend
    rem /**
    rem  * {@inheritDoc}
    rem  */
    method public static BBjString getId()
        methodret "agAggregationComponent"
    methodend
    rem /**
    rem  * @override
    rem  *
    rem  * {@inheritDoc}
    rem  */
    method public JsonObject getAsJsonObject()
        params! = new JsonObject()
        params!.addProperty("aggFuncs" , iff(#getAggFuncs().size() <> 0 ,new Gson().toJson(#getAggFuncs()), null()) ,err=*next)
        json! = #super!.getAsJsonObject()
        json!.add("statusPanelParams",params!)
        methodret json!
    methodend

    method protected void fillHashSetWithDefault()
        #getAggFuncs().add("count")
        #getAggFuncs().add("sum")
        #getAggFuncs().add("min")
        #getAggFuncs().add("max")
        #getAggFuncs().add("avg")
    methodend

classend
rem /**
rem  * GxStatusBar
rem  *
rem  * Gx status bar manager.
rem  * The class can add, remove & hide status bar components
rem  *
rem  * @author Hyyan Abo Fakher
rem  */
class public GxStatusBar
    rem /**
    rem  *  A map for the registered components
    rem  */
    field protected LinkedHashMap Components! = new LinkedHashMap()
    rem /**
    rem  * The BBjGridExWidget instance
    rem  */
    field protected BBjGridExWidget Widget!
    rem /**
    rem  * Construct new sidebar
    rem  *
    rem  * @param BBjGridExWidget widget!
    rem  */
    method public GxStatusBar(BBjGridExWidget widget!)
        #Widget! = widget!
    methodend
    rem /**
    rem  * Add statusbar component
    rem  *
    rem  * @param GxStatusBarComponentInterface component! a statusbar component
    rem  */
    method public void addComponent(GxStatusBarComponentInterface component!)
        #Components!.put(component!.getId(),component!)
    methodend
    rem /**
    rem  * Get statusbar component
    rem  *
    rem  * @param BBjString id! The component id
    rem  * 
    rem  * @return GxStatusBarComponentInterface The component instance
    rem  */
    method public GxStatusBarComponentInterface getComponent(BBjString id!)
        declare auto GxStatusBarComponentInterface c!

        c! = #Components!.get(id!)
        methodret c!
    methodend
    rem /**
    rem  * Remove statusbar component
    rem  *
    rem  * @param BBjString id! The component id
    rem  */
    method public void removeComponent(BBjString id!)
        #Components!.remove(id!)
    methodend
    rem /**
    rem  * Remove statusbar component
    rem  *
    rem  * @param GxStatusBarComponentInterface component! a statusbar component
    rem  */
    method public void removeComponent(GxStatusBarComponentInterface component!)
        #Components!.remove(component!.getId())
    methodend
    rem /**
    rem  * Hide/show statusbar component
    rem  *
    rem  * @param BBjString id! The component id
    rem  * @param BBjNumber visibility! 0 to hide component, 1 to show component
    rem  */
    method public void setComponentVisibility(BBjString id! , BBjNumber visibility!)
        scriptKey! = "$wnd.gw_setStatusbarComponentVisibility" + id!
        #Widget!.getExecutor().execute(scriptKey!,"$wnd.gw_setStatusbarComponentVisibility('" + #Widget!.getRootId() + "','" + id! + "'," + str(visibility!) + ")")
    methodend
    rem /**
    rem  * Hide/show statusbar component
    rem  *
    rem  * @param GxStatusBarComponentInterface component! a statusbar component
    rem  * @param BBjNumber visibility! 0 to hide component, 1 to show component
    rem  */
    method public void setComponentVisibility(GxStatusBarComponentInterface component! , BBjNumber visibility!)
        #setComponentVisibility(component!.getId() , visibility!)
    methodend
    rem /**
    rem  * Convert the statusbar into a parsable json string
    rem  *
    rem  * @returns BBjString
    rem  */
    method public BBjString toString()
        declare JsonArray defs!

        defs! = new JsonArray()
        it! = #Components!.entrySet().iterator()
        while it!.hasNext() = BBjAPI.TRUE
            defs!.add(it!.next().getValue().getAsJsonObject())
        wend

        declare JsonObject json!

        json! = new JsonObject()
        json!.addProperty("statusPanels",str(defs!.toString()))
        methodret new Gson().toJson(json!)
    methodend

classend
