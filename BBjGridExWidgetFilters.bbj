rem package BBjGridExWidget.Filters
rem /**
rem  * This file is part of the BBjGridExWidget plugin.
rem  * (c) Basis Europe <eu@basis.com>
rem  *
rem  * For the full copyright and license information, please view the LICENSE
rem  * file that was distributed with this source code.
rem  */
use com.google.gson.JsonObject
rem /**
rem  * Column Filter Public Interface
rem  */
interface public BBjGridExWidgetFilterInterface
    rem /**
    rem  * A constant which holds the client filter real name
    rem  */

    method public static BBjString FILTER_NAME()
    rem /**
    rem  * Convert the filter definition to Json Object
    rem  *
    rem  * @return JsonOobject The filter as JsonObject
    rem  */

    method public JsonObject getAsJsonObject()

interfaceend
rem /**
rem  * The class holds the shared ag filter options between all filter types. This is the base class for all filter types
rem  *
rem  * @author Hyyan Abo Fakher
rem  */
class private BBjGridExWidgetColumnFilterAG implements BBjGridExWidgetFilterInterface
    rem /**
    rem  *Set to true to have the filter use an Apply button. If the Apply button is present, then the filter is only applied after the user hits the Apply button.
    rem  */
    field public BBjNumber ApplyButton! = 0
    rem /**
    rem  * Set to true to have the filter use a Clear button. The Clear button will clear the details of the filter thus resetting it.
    rem  */
    field public BBjNumber ClearButton! = 0
    rem /**
    rem  * The number of milliseconds to debounce by before applying the filter
    rem  */
    field public BBjNumber DebounceMs! = 500
    rem /**
    rem  *  If set to 'clear', then setting data into the grid will clear (reset) the filter If set to 'keep' then the grid will keep it's currently set filter. The default is 'clear'
    rem  */
    field public BBjString NewRowsAction! = BBjGridExWidgetColumnFilterAG.NEW_ROWS_ACTION_CLEAR()
    rem /**
    rem  * If true, the filter will only offer Condition 1.
    rem  */
    field public BBjNumber SuppressAndOrCondition! = 1
    rem /**
    rem  * A constant which describes the NewRowsAction behavior
    rem  *
    rem  * @return BBjString <b>clear</b>
    rem  */
    method public static BBjString NEW_ROWS_ACTION_CLEAR()
        methodret "clear"
    methodend
    rem /**
    rem  * A constant which describes the NewRowsAction behavior
    rem  *
    rem  * @return BBjString <b>keep</b>
    rem  */
    method public static BBjString NEW_ROWS_ACTION_KEEP()
        methodret "keep"
    methodend
    rem /**
    rem  * {@inheritDoc}
    rem  */
    method public JsonObject getAsJsonObject()
        declare JsonObject json!

        json! = new JsonObject()
        json!.addProperty("applyButton" , #getApplyButton().booleanValue(),err=*next)
        json!.addProperty("clearButton" , #getClearButton().booleanValue(),err=*next)
        json!.addProperty("debounceMs" , iff(#getApplyButton() , null() , #getDebounceMs().longValue()),err=*next)
        json!.addProperty("newRowsAction" , #getNewRowsAction(),err=*next)
        json!.addProperty("suppressAndOrCondition" , #getSuppressAndOrCondition().booleanValue(),err=*next)
        methodret json!
    methodend

classend
rem /**
rem  * The class represents the default ag-grid text filter
rem  *
rem  * @author Hyyan Abo Fakher
rem  */
class public BBjGridExWidgetFilterAGText extends BBjGridExWidgetColumnFilterAG
    rem /**
    rem  * Set to true to make text filtering case sensitive, otherwise the filtering will be case insensitive
    rem  */
    field public BBjNumber CaseSensitive! = 0
    rem /**
    rem  * {@inheritDoc}
    rem  */
    method public static BBjString FILTER_NAME()
        methodret "agTextColumnFilter"
    methodend
    rem /**
    rem  * @override
    rem  *
    rem  * {@inheritDoc}
    rem  */
    method public JsonObject getAsJsonObject()
        declare JsonObject json!

        json! = #super!.getAsJsonObject()
        json!.addProperty("caseSensitive" , #getCaseSensitive().booleanValue(),err=*next)
        methodret json!
    methodend

classend
rem /**
rem  * The class represents the default ag-grid number filter
rem  *
rem  * @author Hyyan Abo Fakher
rem  */
class public BBjGridExWidgetFilterAGNumber extends BBjGridExWidgetColumnFilterAG
    rem /**
    rem  * If true then doing 'inRange' filter option will include values equal to the start and end of the range.
    rem  */
    field public BBjNumber InRangeInclusive! = 1
    rem /**
    rem  * If true then blank (null or undefined) values will pass the 'equals' filter option.
    rem  */
    field public BBjNumber IncludeBlanksInEquals! = 0
    rem /**
    rem  * If true then blank (null or undefined) values will pass the 'lessThan' and 'lessThanOrEqual' filter options.
    rem  */
    field public BBjNumber IncludeBlanksInLessThan! = 0
    rem /**
    rem  * If true then blank (null or undefined) values will pass the 'greaterThan' and 'greaterThanOrEqual' filter options.
    rem  */
    field public BBjNumber IncludeBlanksInGreaterThan! = 0
    rem /**
    rem  * {@inheritDoc}
    rem  */
    method public static BBjString FILTER_NAME()
        methodret "agNumberColumnFilter"
    methodend
    rem /**
    rem  * @override
    rem  *
    rem  * {@inheritDoc}
    rem  */
    method public JsonObject getAsJsonObject()
        declare JsonObject json!

        json! = #super!.getAsJsonObject()
        json!.addProperty("inRangeInclusive" , #getInRangeInclusive().booleanValue(),err=*next)
        json!.addProperty("includeBlanksInEquals" , #getIncludeBlanksInEquals().booleanValue(),err=*next)
        json!.addProperty("includeBlanksInLessThan" , #getIncludeBlanksInLessThan().booleanValue(),err=*next)
        json!.addProperty("includeBlanksInGreaterThan" , #getIncludeBlanksInGreaterThan().booleanValue(),err=*next)
        methodret json!
    methodend

classend
rem /**
rem  * The class represents the default ag-grid date filter
rem  *
rem  * @author Hyyan Abo Fakher
rem  */
class public BBjGridExWidgetFilterAGDate extends BBjGridExWidgetFilterAGNumber
    rem /**
    rem  * @override
    rem  *
    rem  * {@inheritDoc}
    rem  */
    method public static BBjString FILTER_NAME()
        methodret "agDateColumnFilter"
    methodend

classend
rem /**
rem  * The class represents the boolean filter
rem  *
rem  * @author Hyyan Abo Fakher
rem  */
class public BBjGridExWidgetFilterBasicBoolean implements BBjGridExWidgetFilterInterface
    rem /**
    rem  * HTML string which defines how to render true values.
    rem  */
    field public BBjString TrueValue! = "&#9673 True"
    rem /**
    rem  * HTML string which defines how to render false values
    rem  */
    field public BBjString FalseValue! = "&#9678; False"
    rem /**
    rem  * HTML string which defines how to render not true of false values
    rem  */
    field public BBjString NoneValue! = "&#9677; None"
    rem /**
    rem  * @override
    rem  *
    rem  * {@inheritDoc}
    rem  */
    method public static BBjString FILTER_NAME()
        methodret "BasicBooleansFilter"
    methodend
    rem /**
    rem  * {@inheritDoc}
    rem  */
    method public JsonObject getAsJsonObject()
        declare JsonObject json!

        json! = new JsonObject()
        json!.addProperty("FILTER_TRUE" , #getTrueValue(),err=*next)
        json!.addProperty("FILTER_FAlSE" , #getFalseValue(),err=*next)
        json!.addProperty("FILTER_NONE" , #getNoneValue(),err=*next)
        methodret json!
    methodend

classend
rem /**
rem  * The class represents the date filter
rem  *
rem  * @author Hyyan Abo Fakher
rem  */
class public BBjGridExWidgetFilterBasicDate implements BBjGridExWidgetFilterInterface
    rem /**
    rem  * The Date mask for calander input
    rem  */
    field public BBjString Mask! = "%Y/%Mz/%Dz"
    rem /**
    rem  * Allow Input Editing
    rem  */
    field public BBjNumber AllowInput! = 1
    rem /**
    rem  * @override
    rem  *
    rem  * {@inheritDoc}
    rem  */
    method public static BBjString FILTER_NAME()
        methodret "BasicDateTimesFilter"
    methodend
    rem /**
    rem  * {@inheritDoc}
    rem  */
    method public JsonObject getAsJsonObject()
        declare JsonObject json!

        json! = new JsonObject()
        json!.addProperty("FILTER_MASK" , #getMask(),err=*next)
        json!.addProperty("FILTER_ALLOW_INPUT" , #getAllowInput().booleanValue(),err=*next)
        methodret json!
    methodend

classend
rem /**
rem  * The class represents the timestamp filter
rem  *
rem  * @author Hyyan Abo Fakher
rem  */
class public BBjGridExWidgetFilterBasicTimestamp extends BBjGridExWidgetFilterBasicDate
    rem /**
    rem  * Enable/disable seconds in time picker
    rem  */
    field public BBjNumber EnableSeconds! = 0
    rem /**
    rem  * Enable/disable 24 hours mode
    rem  */
    field public BBjNumber Enable24H! = 0
    method public BBjGridExWidgetFilterBasicTimestamp()
        #setMask("%Y/%Mz/%Dz %Hz:%mz:%sz")
    methodend
    rem /**
    rem  * {@inheritDoc}
    rem  */
    method public JsonObject getAsJsonObject()
        declare JsonObject json!

        json! = #super!.getAsJsonObject()
        json!.addProperty("FILTER_ENABLE_TIME" , 1)
        json!.addProperty("FILTER_ENABLE_SECONDS" , #getEnableSeconds().booleanValue(),err=*next)
        json!.addProperty("FILTER_24H" , #getEnable24H().booleanValue(),err=*next)
        methodret json!
    methodend

classend
