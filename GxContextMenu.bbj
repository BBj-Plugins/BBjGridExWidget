rem /**
rem  *  The package exports a collection of classes to manipulate the grid's context menu
rem  */
rem package GxContextMenu
rem /**
rem  * This file is part of the BBjGridExWidget plugin.
rem  * (c) Basis Europe <eu@basis.cloud>
rem  *
rem  * For the full copyright and license information, please view the LICENSE
rem  * file that was distributed with this source code.
rem  */
use java.util.LinkedHashMap
use com.google.gson.JsonArray
use com.google.gson.JsonObject
use com.google.gson.JsonPrimitive
rem /**
rem  * A class which represents grid context menu
rem  *
rem  * @author Hyyan Abo Fakher
rem  */
class public GxContextMenu

    field protected LinkedHashMap Items! = new LinkedHashMap()
    rem /**
    rem  * Add new context menu item
    rem  *
    rem  * @param GxContextMenuItemInterface item! the item object
    rem  */
    method public void addItem(GxContextMenuItemInterface item!)
        #Items!.put(item!.getId() , item!)
    methodend
    rem /**
    rem  * Add a predefined context menu item
    rem  *
    rem  * @param BBjString item! the item ID
    rem  */
    method public void addItem(BBjString item!)
        #Items!.put(str(System.nanoTime()), item!)
    methodend
    rem /**
    rem  * Convert the menu to a JSON string
    rem  *
    rem  * @returns String
    rem  */
    method public String toString()
        declare JsonArray array!

        array! = new JsonArray()
        it! = #Items!.entrySet().iterator()
        WHILE (it!.hasNext())
            next! =  it!.next()
            value! = next!.getValue()
            array!.add(new JsonPrimitive(value!.toString()))
        WEND

        methodret array!.toString()
    methodend

classend
rem /**
rem  * A class which represents the default grid context menu
rem  *
rem  * @author Hyyan Abo Fakher
rem  */
class public GxDefaultContextMenu extends GxContextMenu
    rem /**
    rem  * Construct the default grid context menu
    rem  */
    method public GxDefaultContextMenu()
        #addItem(GxContextMenuItem.COPY())
        #addItem(GxContextMenuItem.COPY_WITH_HEADERS())
        #addItem(GxContextMenuItem.EXPORT())
    methodend

classend
rem /**
rem  * An interface which defines a menu item
rem  *
rem  * @author Hyyan Abo Fakher
rem  */
interface public GxContextMenuItemInterface
    rem /**
    rem  * Get the menu item ID
    rem  *
    rem  * @return BBjString the menu item's id
    rem  */

    method public BBjString getId()
    rem /**
    rem  * Convert the item to String
    rem  *
    rem  * @return BBjString
    rem  */

    method public String toString()

interfaceend
rem /**
rem  * A class which represents a grid context menu item
rem  *
rem  * @author Hyyan Abo Fakher
rem  */
class public GxContextMenuItem implements GxContextMenuItemInterface
    rem /**
    rem  * The item's label
    rem  */
    field public BBjString Label! = null()
    rem /**
    rem  * Optional tooltip for the menu item
    rem  */
    field public BBjString Tooltip! = null()
    rem /**
    rem  * The icon to display beside the icon, either a DOM element or HTML string
    rem  */
    field public BBjString Icon! = null()
    rem /**
    rem  * Additional CSS classes to be applied to the menu item
    rem  */
    field public BBjString CssClasses! = null()
    rem /**
    rem  * if this menu is a submenu, contains a list of submenu item definitions
    rem  */
    field public GxContextMenu SubMenu! = null()
    rem /**
    rem  * The item's ID
    rem  */
    field protected BBjString Id! = null()
    rem /**
    rem  * @return shortcode to separator menu item
    rem  */
    method public static BBjString SEPARATOR()
        methodret "separator"
    methodend
    rem /**
    rem  * @return shortcode to autoSizeAll menu item
    rem  */
    method public static BBjString AUTO_SIZE_ALL()
        methodret "autoSizeAll"
    methodend
    rem /**
    rem  * @return shortcode to expandAll menu item
    rem  */
    method public static BBjString EXPAND_ALL()
        methodret "expandAll"
    methodend
    rem /**
    rem  * @return shortcode to contractAll menu item
    rem  */
    method public static BBjString CONTRACT_ALL()
        methodret "contractAll"
    methodend
    rem /**
    rem  * @return shortcode to copy menu item
    rem  */
    method public static BBjString COPY()
        methodret "copy"
    methodend
    rem /**
    rem  * @return shortcode to copyWithHeaders menu item
    rem  */
    method public static BBjString COPY_WITH_HEADERS ()
        methodret "copyWithHeaders"
    methodend
    rem /**
    rem  * @return shortcode to resetColumns menu item
    rem  */
    method public static BBjString RESET_COLUMNS()
        methodret "resetColumns"
    methodend
    rem /**
    rem  * @return shortcode to export menu item
    rem  */
    method public static BBjString EXPORT()
        methodret "export"
    methodend
    rem /**
    rem  * @return shortcode to chartRange menu item
    rem  */
    method public static BBjString CHART_RANGE()
        methodret "chartRange"
    methodend     
    rem /**
    rem  * @return shortcode to csvExport menu item
    rem  */
    method public static BBjString CSV_EXPORT()
        methodret "csvExport"
    methodend
    rem /**
    rem  * @return shortcode to excelExport menu item
    rem  */
    method public static BBjString EXCEL_EXPORT()
        methodret "excelExport"
    methodend
    rem /**
    rem  * Disable default constructor
    rem  */
    method private GxContextMenuItem()
    methodend
    rem /**
    rem  * Construct new Menu item
    rem  *
    rem  * @param BBjString id!  The item's ID
    rem  */
    method public GxContextMenuItem(BBjString id!)
        #Id! = id!
    methodend
    rem /**
    rem  * Construct new Menu item
    rem  *
    rem  * @param BBjString id!  The item's ID
    rem  * @param BBjString label! The item's name
    rem  */
    method public GxContextMenuItem(BBjString id! ,BBjString label!)
        #this!(id!)
        #Label! = label!
    methodend
    rem /**
    rem  * Construct new Menu item
    rem  *
    rem  * @param BBjNumber id!  The item's ID
    rem  * @param BBjString label! The item's name
    rem  */
    method public GxContextMenuItem(BBjNumber id! ,BBjString label!)
        #this!(str(id!) , label!)
    methodend
    rem /**
    rem  * {@inheritDoc}
    rem  */
    method public BBjString getId()
        methodret #Id!
    methodend
    rem /**
    rem  * Construct an html image to use as an icon
    rem  *
    rem  * @param BBjString url$ image url or base64 string
    rem  * @param BBjNumber width! image width
    rem  * @param BBjNumber height! image height
    rem  */
    method public void setIcon(BBjString url$,BBjNumber width!,BBjNumber height!)
        #setIcon("<img border=0 width=" + str(width!) +  " height=" + str(height!) + " src='" + url$ + "' />")
    methodend
    rem /**
    rem  * Construct an html image to use as an icon
    rem  *
    rem  * @param BBjString url$: image url or base64 string
    rem  * @param BBjNumber width!: image width
    rem  */
    method public void setIcon(BBjString url$,BBjNumber width!)
        #setIcon(url$,width!,width!)
    methodend
    rem /**
    rem  * Convert the item to String
    rem  *
    rem  * @return BBjString
    rem  */
    method public String toString()
        declare JsonObject json!

        json! = new JsonObject()
        json!.addProperty("id",#getId() , err=*next)
        json!.addProperty("name",#getLabel() , err=*next)
        json!.addProperty("icon",#getIcon() , err=*next)
        json!.addProperty("tooltip",#getTooltip() , err=*next)
        json!.addProperty("cssClasses",#getCssClasses(), err=*next)
        json!.addProperty("subMenu" , #getSubMenu().toString() ,err=*next)
        methodret json!.toString()
    methodend

classend