rem package BBjGridExWidget.CellEditors
rem /**
rem  * This file is part of the BBjGridExWidget plugin.
rem  * (c) Basis Europe <eu@basis.com>
rem  *
rem  * For the full copyright and license information, please view the LICENSE
rem  * file that was distributed with this source code.
rem  */
use com.google.gson.JsonObject
rem /**
rem  * Column Filter Public Interface
rem  *
rem  * @author Hyyan Abo Fakher
rem  */
interface public BBjGridExWidgetCellEditorInterface
    rem /**
    rem  * A constant which holds the client cell editor real name
    rem  */

    method public static BBjString CELL_EDITOR_NAME()
    rem /**
    rem  * Convert the filter definition to Json Object
    rem  *
    rem  * @return JsonOobject The filter as JsonObject
    rem  */

    method public JsonObject getAsJsonObject()

interfaceend
rem /**
rem  * Simple text editors that use the standard HTML 'input' tag
rem  *
rem  * @author Hyyan Abo Fakher
rem  */
class public BBjGridExWidgetCellEditorAGText implements BBjGridExWidgetCellEditorInterface
    rem /**
    rem  * If set to true then the grid will use the provided cell formatter if one is provided.
    rem  */
    field public BBjNumber UserFormmatter! = 0
    rem /**
    rem  * @override
    rem  *
    rem  * {@inheritDoc}
    rem  */
    method public static BBjString CELL_EDITOR_NAME()
        methodret "agTextCellEditor"
    methodend
    rem /**
    rem  * @override
    rem  *
    rem  * {@inheritDoc}
    rem  */
    method public JsonObject getAsJsonObject()
        declare JsonObject json!

        json! = new JsonObject()
        json!.addProperty("useFormatter",#getUserFormmatter() , err=*next)
        methodret json!
    methodend

classend
rem /**
rem  * Same as BBjGridExWidgetCellEditorAgText but as popup.
rem  *
rem  * @author Hyyan Abo Fakher
rem  */
class public BBjGridExWidgetCellEditorAGPopupText extends BBjGridExWidgetCellEditorAGText
    rem /**
    rem  * @override
    rem  *
    rem  * {@inheritDoc}
    rem  */
    method public static BBjString CELL_EDITOR_NAME()
        methodret "agPopupTextCellEditor"
    methodend

classend
rem /**
rem  * Simple editor that uses the standard HTML 'textarea' tag.
rem  *
rem  * @author Hyyan Abo Fakher
rem  */
class public BBjGridExWidgetCellEditorAGLargeText extends BBjGridExWidgetCellEditorAGText
    rem /**
    rem  * Max number of characters to allow. Default is 200.
    rem  */
    field public BBjNumber MaxLength! = 200
    rem /**
    rem  * Number of character rows to display. Default is 10.
    rem  */
    field public BBjNumber Rows! = 10
    rem /**
    rem  * Number of character columns to display. Default is 60.
    rem  */
    field public BBjNumber cols! = 60
    rem /**
    rem  * @override
    rem  *
    rem  * {@inheritDoc}
    rem  */
    method public static BBjString CELL_EDITOR_NAME()
        methodret "agLargeTextCellEditor "
    methodend
    rem /**
    rem  * @override
    rem  *
    rem  * {@inheritDoc}
    rem  */
    method public JsonObject getAsJsonObject()
        declare JsonObject json!

        json! = #super!.getAsJsonObject()
        json!.addProperty("maxLength",#getMaxLength().longValue() , err=*next)
        json!.addProperty("rows",#getRows().longValue() , err=*next)
        json!.addProperty("cols",#getcols().longValue() , err=*next)
        methodret json!
    methodend

classend
rem /**
rem  * Simple switch button to switch boolean values
rem  *
rem  * @author Hyyan Abo Fakher
rem  */
class public BBjGridExWidgetCellEditorBasicBoolean implements BBjGridExWidgetCellEditorInterface
    rem /**
    rem  * @override
    rem  *
    rem  * {@inheritDoc}
    rem  */
    method public static BBjString CELL_EDITOR_NAME()
        methodret "BasicBooleansEditor"
    methodend
    rem /**
    rem  * @override
    rem  *
    rem  * {@inheritDoc}
    rem  */
    method public JsonObject getAsJsonObject()
        methodret new JsonObject()
    methodend

classend
rem /**
rem  * Simple number input
rem  *
rem  * @author Hyyan Abo Fakher
rem  */
class public BBjGridExWidgetCellEditorBasicNumber implements BBjGridExWidgetCellEditorInterface
    rem /**
    rem  * The min allowed value
    rem  */
    field public BBjNumber Min! = null()
    rem /**
    rem  * The max allowed value
    rem  */
    field public BBjNumber Max! = null()
    rem /**
    rem  * The increment / decrement step
    rem  */
    field public BBjNumber Step! = null()
    rem /**
    rem  * @override
    rem  *
    rem  * {@inheritDoc}
    rem  */
    method public static BBjString CELL_EDITOR_NAME()
        methodret "BasicNumbersEditor"
    methodend
    rem /**
    rem  * @override
    rem  *
    rem  * {@inheritDoc}
    rem  */
    method public JsonObject getAsJsonObject()
        declare JsonObject json!

        json! = new JsonObject()
        json!.addProperty("EDITOR_MIN" , #getMin().longValue() , err=*next)
        json!.addProperty("EDITOR_MAX" , #getMax().longValue() , err=*next)
        json!.addProperty("EDITOR_STEP" , #getStep().longValue() , err=*next)
        methodret json!
    methodend

classend
rem /**
rem  * calander input
rem  *
rem  * @author Hyyan Abo Fakher
rem  */
class public BBjGridExWidgetCellEditorBasicDate implements BBjGridExWidgetCellEditorInterface
    rem /**
    rem  * The Date mask for calander input
    rem  */
    field public BBjString Mask! = "%Y/%Mz/%Dz"
    rem /**
    rem  * Allow Input Editing
    rem  */
    field public BBjNumber AllowInput! = 1
    rem /**
    rem  * @override
    rem  *
    rem  * {@inheritDoc}
    rem  */
    method public static BBjString CELL_EDITOR_NAME()
        methodret "BasicDateTimesEditor"
    methodend
    rem /**
    rem  * {@inheritDoc}
    rem  */
    method public JsonObject getAsJsonObject()
        declare JsonObject json!

        json! = new JsonObject()
        json!.addProperty("EDITOR_MASK" , #getMask(),err=*next)
        json!.addProperty("EDITOR_ALLOW_INPUT" , #getAllowInput().booleanValue(),err=*next)
        methodret json!
    methodend

classend
rem /**
rem  * Timestamp input
rem  *
rem  * @author Hyyan Abo Fakher
rem  */
class public BBjGridExWidgetCellEditorBasicTimestamp extends BBjGridExWidgetCellEditorBasicDate
    rem /**
    rem  * Enable/disable seconds in time picker
    rem  */
    field public BBjNumber EnableSeconds! = 0

    method public BBjGridExWidgetCellEditorBasicTimestamp()
        #setMask("%Y/%Mz/%Dz %Hz:%mz:%sz")
    methodend
    rem /**
    rem  * {@inheritDoc}
    rem  */
    method public JsonObject getAsJsonObject()
        json! = #super!.getAsJsonObject()
        json!.addProperty("EDITOR_ENABLE_TIME" , 1 ,err=*next)
        json!.addProperty("EDITOR_ENABLE_SECONDS" , #getEnableSeconds().booleanValue() ,err=*next)
        methodret json!
    methodend

classend