"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6253],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>p});var i=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},l=Object.keys(e);for(i=0;i<l.length;i++)r=l[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)r=l[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=i.createContext({}),c=function(e){var t=i.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},d=function(e){var t=c(e.components);return i.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),f=c(r),p=n,g=f["".concat(o,".").concat(p)]||f[p]||u[p]||l;return r?i.createElement(g,a(a({ref:t},d),{},{components:r})):i.createElement(g,a({ref:t},d))}));function p(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,a=new Array(l);a[0]=f;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:n,a[1]=s;for(var c=2;c<l;c++)a[c]=r[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3878:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var i=r(7462),n=(r(7294),r(3905));const l={sidebar_position:2,title:"GxFilterSetFilter",sidebar_class_name:"enhanced-feature",description:"The Set Filter takes inspiration from Excel's AutoFilter and allows filtering on sets of data."},a=void 0,s={unversionedId:"filtering/columns-filter/gx-filter-set-filter",id:"filtering/columns-filter/gx-filter-set-filter",title:"GxFilterSetFilter",description:"The Set Filter takes inspiration from Excel's AutoFilter and allows filtering on sets of data.",source:"@site/docs/filtering/columns-filter/gx-filter-set-filter.md",sourceDirName:"filtering/columns-filter",slug:"/filtering/columns-filter/gx-filter-set-filter",permalink:"/BBjGridExWidget/docs/filtering/columns-filter/gx-filter-set-filter",draft:!1,editUrl:"https://github.com/BBj-Plugins/BBjGridExWidget/tree/dev/website/docs/filtering/columns-filter/gx-filter-set-filter.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"GxFilterSetFilter",sidebar_class_name:"enhanced-feature",description:"The Set Filter takes inspiration from Excel's AutoFilter and allows filtering on sets of data."},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/BBjGridExWidget/docs/filtering/columns-filter/overview"},next:{title:"Quick Filter",permalink:"/BBjGridExWidget/docs/filtering/quick-filter"}},o={},c=[{value:"Set Filter Sections",id:"set-filter-sections",level:2},{value:"Enabling Set Filters",id:"enabling-set-filters",level:2}],d={toc:c};function u(e){let{components:t,...l}=e;return(0,n.kt)("wrapper",(0,i.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/Version-Enhanced-038279",alt:"BBjGridExWidget - Enhanced Version"}),"\n",(0,n.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/BBj-SAM%20required-orange",alt:"BBjGridExWidget - SAM Required"})),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"https://bbj-plugins.github.io/BBjGridExWidget/javadoc/GxFilters/GxFilterSetFilter.html"},(0,n.kt)("inlineCode",{parentName:"a"},"GxFilterSetFilter"))," takes inspiration from Excel's AutoFilter and allows filtering on sets of data."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"BBjGridExWidget - Set Filter",src:r(2616).Z,width:"408",height:"327"})),(0,n.kt)("h2",{id:"set-filter-sections"},"Set Filter Sections"),(0,n.kt)("p",null,"The Set Filter is comprised of the following sections:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Mini Filter"),": used to narrow the values available for selection inside the Filter List."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Select All"),": used to select / deselect all values shown in the Filter List."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Filter List"),": a list of Set Filter Values which can be selected / deselected to set the filter."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Filter Buttons"),": Action buttons that can be optionally added to the bottom of the Set Filter.")),(0,n.kt)("h2",{id:"enabling-set-filters"},"Enabling Set Filters"),(0,n.kt)("p",null,"The filer can also be explicitly configured as shown below:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-BBj",metastring:"showLineNumber",showLineNumber:!0},'use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidget\nuse ::BBjGridExWidget/GxFilters.bbj::GxFilterSetFilter\nuse com.basiscomponents.db.ResultSet\nuse com.basiscomponents.bc.SqlQueryBC\n\ndeclare auto BBjTopLevelWindow wnd!\n\nwnd! = BBjAPI().openSysGui("X0").addWindow(10,10,400,300,"GxFilterSetFilter",$00090002$)\nwnd!.setCallback(BBjAPI.ON_CLOSE,"byebye")\n\ngosub main\nprocess_events\n\nmain:\n  declare SqlQueryBC sbc!\n  declare ResultSet rs!\n  declare BBjGridExWidget grid!\n\n  sbc! = new SqlQueryBC(BBjAPI().getJDBCConnection("ChileCompany"))\n  rs! = sbc!.retrieve("SELECT FIRST_NAME, COUNTRY FROM CUSTOMER")\n\n  grid! = new BBjGridExWidget(wnd!,100,0,0,400,300)\n  grid!.setFitToGrid()\n  grid!.setData(rs!)\n  grid!.getColumn("FIRST_NAME").setLabel("First Name")\n  grid!.getColumn("COUNTRY").setLabel("Country")\n\n  rem IMPORTANT: GxFilterSetFilter is part of the Enhanced grid\n  rem check for license and (for development purposes) for license-less behavior\n  if (grid!.isLicensed() and !grid!.getForceCommunityBuild()) then\n    country! = grid!.getColumn("COUNTRY")\n    country!.setFilter(new GxFilterSetFilter())\n  else\n    rem if no license available,\n    rem deactivate filter and add a notice as tooltip:\n    countryFilter!.setEnabled(0)\n    countryFilter!.setToolTipText("Deactivated: Part of the Enhanced Grid")\n  endif\nreturn\n\nbyebye:\nbye\n')),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"BBjGridExWidget - Enable Set Filter",src:r(619).Z,width:"552",height:"418"})))}u.isMDXComponent=!0},619:(e,t,r)=>{r.d(t,{Z:()=>i});const i=r.p+"assets/images/enable-set-filter-37a2948df911371c1531a14d512a1e20.png"},2616:(e,t,r)=>{r.d(t,{Z:()=>i});const i=r.p+"assets/images/set-filter-3ef98307bce63bce7ea33a3ab7a1a946.png"}}]);