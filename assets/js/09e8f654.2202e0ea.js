"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6719],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>p});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=i.createContext({}),l=function(e){var t=i.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=l(e.components);return i.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,u=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=l(n),p=o,g=c["".concat(u,".").concat(p)]||c[p]||m[p]||r;return n?i.createElement(g,a(a({ref:t},d),{},{components:n})):i.createElement(g,a({ref:t},d))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,a=new Array(r);a[0]=c;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<r;l++)a[l]=n[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5743:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var i=n(7462),o=(n(7294),n(3905));const r={sidebar_position:4,title:"Context Menu",sidebar_class_name:"enhanced-feature",description:"This section covers BBjGridExWidget custom context menus"},a=void 0,s={unversionedId:"accessories/context-menu",id:"accessories/context-menu",title:"Context Menu",description:"This section covers BBjGridExWidget custom context menus",source:"@site/docs/accessories/context-menu.md",sourceDirName:"accessories",slug:"/accessories/context-menu",permalink:"/BBjGridExWidget/docs/accessories/context-menu",draft:!1,editUrl:"https://github.com/BBj-Plugins/BBjGridExWidget/tree/dev/website/docs/accessories/context-menu.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Context Menu",sidebar_class_name:"enhanced-feature",description:"This section covers BBjGridExWidget custom context menus"},sidebar:"tutorialSidebar",previous:{title:"Column Menu",permalink:"/BBjGridExWidget/docs/accessories/column-menu"},next:{title:"Status Bar",permalink:"/BBjGridExWidget/docs/accessories/status-bar"}},u={},l=[{value:"Configuring the Context Menu",id:"configuring-the-context-menu",level:2},{value:"Sample: Custom Context Menu",id:"sample-custom-context-menu",level:2},{value:"Built In Menu Items",id:"built-in-menu-items",level:2},{value:"How to use builtin menu items ?",id:"how-to-use-builtin-menu-items-",level:3},{value:"Nested Context Menus",id:"nested-context-menus",level:2},{value:"Example: Putting it together",id:"example-putting-it-together",level:2}],d={toc:l};function m(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,i.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/Version-Enhanced-038279",alt:"BBjGridExWidget - Enhanced Version"}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/BBj-SAM%20required-orange",alt:"BBjGridExWidget - SAM Required"})),(0,o.kt)("p",null,"The user can bring up the context menu by right clicking on a cell. By default, the context menu provides ",(0,o.kt)("inlineCode",{parentName:"p"},"copy")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"export"),". ",(0,o.kt)("inlineCode",{parentName:"p"},"Copy")," will copy the selected cells or rows to the clipboard."),(0,o.kt)("h2",{id:"configuring-the-context-menu"},"Configuring the Context Menu"),(0,o.kt)("p",null,"You can configure the context menu by modifying the the grid's ",(0,o.kt)("a",{parentName:"p",href:"https://bbj-plugins.github.io/BBjGridExWidget/javadoc/GxContextMenu/GxDefaultContextMenu.html"},"default context menu")," or by providing a new ",(0,o.kt)("a",{parentName:"p",href:"https://bbj-plugins.github.io/BBjGridExWidget/javadoc/GxContextMenu/GxContextMenu.html"},(0,o.kt)("inlineCode",{parentName:"a"},"GxContextMenu"))),(0,o.kt)("p",null,"If you want to turn off the context menu completely, set the grid option ",(0,o.kt)("inlineCode",{parentName:"p"},"SuppressContextMenu=true"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bbj"},"grid!.getOptions().setSuppressContextMenu(1)\n")),(0,o.kt)("h2",{id:"sample-custom-context-menu"},"Sample: Custom Context Menu"),(0,o.kt)("p",null,"The following sample shows how to build a custom context menu. "),(0,o.kt)("p",null,"The following can be noted:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"We override the default context menu by providing a new context menu object"),(0,o.kt)("li",{parentName:"ul"},"Any custom menu item requires two params",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"ID (used for handling events) "),(0,o.kt)("li",{parentName:"ul"},"Label"))),(0,o.kt)("li",{parentName:"ul"},"We are using the DWC ",(0,o.kt)("a",{parentName:"li",href:"https://basishub.github.io/basis-next/#/dwc/bbj-icon"},(0,o.kt)("inlineCode",{parentName:"a"},"bbj-icon"))," component to set the items icons")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bbj",metastring:"showLineNumbers",showLineNumbers:!0},'use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidget\nuse ::BBjGridExWidget/GxContextMenu.bbj::GxContextMenu\nuse ::BBjGridExWidget/GxContextMenu.bbj::GxContextMenuItem\nuse ::BBjGridExWidget/Demo/assets/Utilities.bbj::GxDemoUtilities\nuse com.basiscomponents.db.ResultSet\nuse com.basiscomponents.bc.SqlQueryBC\n\ndeclare auto BBjTopLevelWindow wnd!\n\nwnd! = BBjAPI().openSysGui("X0").addWindow(10,10,800,600,"Context Menu Demo")\nwnd!.setCallback(BBjAPI.ON_CLOSE,"byebye")\nwnd!.setCallback(BBjAPI.ON_RESIZE,"resize")\n\ngosub main\nprocess_events\n\nmain:\n  declare SqlQueryBC sbc!\n  declare ResultSet rs!\n  declare BBjGridExWidget grid!\n\n  sbc! = new SqlQueryBC(BBjAPI().getJDBCConnection("CDStore"))\n  rs! = sbc!.retrieve("SELECT TITLE, ARTIST, MUSICTYPE FROM CDINVENTORY")\n\n  menu! = new GxContextMenu()\n\n  youtube! = new GxContextMenuItem(6001,"Open in Youtube")\n  youtube!.setIcon("<bbj-icon name=\'brand-youtube\'></bbj-icon>")\n  youtube!.setTooltip("Listen to this song on Youtube")\n  menu!.addItem(youtube!)\n  \n  spotify! = new GxContextMenuItem(6000,"Open in Spotify")\n  spotify!.setIcon("<bbj-icon name=\'brand-spotify\'></bbj-icon>")\n  spotify!.setTooltip("Listen to this song on Spotify")\n  menu!.addItem(spotify!)\n\n  grid! = new BBjGridExWidget(wnd!,100,0,0,800,600)\n  grid!.getOptions().setContextMenu(menu!)\n  grid!.setData(rs!)\n  grid!.setFitToGrid()\n  grid!.setCallback(6000,"onSpotify")\n  grid!.setCallback(6001,"onYoutube")\nreturn\n\nonSpotify:\n  ev! = BBjAPI().getLastEvent()\n  ev! = ev!.getObject()\n\n  row! = ev!.getRow().asDataRow()\n\n  title$ = row!.getFieldAsString("TITLE").trim()\n  artist$ = row!.getFieldAsString("ARTIST").trim()\n  query$ = java.net.URLEncoder.encode(title$ + " by " + artist$)\n  url$ = "https://open.spotify.com/search/" + query$\n\n  BBjAPI().getThinClient().browse(url$)\nreturn\n\nonYoutube:\n  ev! = BBjAPI().getLastEvent()\n  ev! = ev!.getObject()\n\n  row! = ev!.getRow().asDataRow()\n\n  title$ = row!.getFieldAsString("TITLE").trim()\n  artist$ = row!.getFieldAsString("ARTIST").trim()\n  query$ = java.net.URLEncoder.encode(title$ + " by " + artist$)\n  url$ = "https://www.youtube.com/results?search_query=" + query$\n\n  BBjAPI().getThinClient().browse(url$)\nreturn\n\nresize:\n  ev! = BBjAPI().getLastEvent()\n  w = ev!.getWidth()\n  h = ev!.getHeight()\n\n  grid!.setSize(w,h)\nreturn\n\nbyebye:\nbye\n')),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"BBjGridExWidget - Sidebar",src:n(3949).Z,width:"802",height:"632"})),(0,o.kt)("h2",{id:"built-in-menu-items"},"Built In Menu Items"),(0,o.kt)("p",null,"The BBjGridExWidget also provides a list of predefined menu items for some advanced features.\nThe following is a list of all the default built in menu items with the rules about when they are shown."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"AUTO_SIZE_ALL"),": Auto-size all columns. Not shown by default."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"EXPAND_ALL"),": When set, it's only shown if grouping by at least one column. Not shown by default."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"CONTRACT_ALL"),": Collapse all groups. When set, it's only shown if grouping by at least one column. Not shown by default."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"COPY"),": Copy selected value to clipboard. Shown by default."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"COPY_WITH_HEADERS"),": Copy selected value to clipboard with headers. Shown by default."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"}," COPY_WITH_GROUP_HEADERS"),": Copy selected value to clipboard with headers and header groups. Shown by default."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"RESET_COLUMNS"),": Reset all columns. Not shown by default."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"EXPORT"),": Export sub menu (containing CSV_EXPORT and EXCEL_EXPORT). Shown by default."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"CSV_EXPORT"),": Export to CSV using all default export values. Shown by default."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"EXCEL_EXPORT"),": Export to Excel (.xlsx) using all default export values. Shown by default."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"CHART_RANGE"),": Chart a range of selected cells. Only shown if charting is enabled.")),(0,o.kt)("h3",{id:"how-to-use-builtin-menu-items-"},"How to use builtin menu items ?"),(0,o.kt)("p",null,"Like any other menu items, you cun add some or all of the builtin items to your menu using the ",(0,o.kt)("inlineCode",{parentName:"p"},"GxContextMenu::addItem")," method "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bbj"},"menu!.addItem(GxContextMenuItem.AUTO_SIZE_ALL())\nmenu!.addItem(GxContextMenuItem.RESET_COLUMNS())\nmenu!.addItem(GxContextMenuItem.EXPORT())\nmenu!.addItem(GxContextMenuItem.SEPARATOR())\n")),(0,o.kt)("h2",{id:"nested-context-menus"},"Nested Context Menus"),(0,o.kt)("p",null,"You can nest context menus using the ",(0,o.kt)("inlineCode",{parentName:"p"},"BBjGridExWidget::setSubMenu")," method."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bbj"},'copy! = new GxContextMenuItem(6002,"Copy Functions")\n  submenu! = new GxContextMenu()\n  submenu!.addItem(GxContextMenuItem.COPY())\n  submenu!.addItem(GxContextMenuItem.COPY_WITH_HEADERS())\ncopy!.setSubMenu(submenu!)\nmenu!.addItem(copy!)\n')),(0,o.kt)("h2",{id:"example-putting-it-together"},"Example: Putting it together"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bbj",metastring:"showLineNumbers",showLineNumbers:!0},'use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidget\nuse ::BBjGridExWidget/GxContextMenu.bbj::GxContextMenu\nuse ::BBjGridExWidget/GxContextMenu.bbj::GxContextMenuItem\nuse ::BBjGridExWidget/Demo/assets/Utilities.bbj::GxDemoUtilities\nuse com.basiscomponents.db.ResultSet\nuse com.basiscomponents.bc.SqlQueryBC\n\n\ndeclare auto BBjTopLevelWindow wnd!\n\nwnd! = BBjAPI().openSysGui("X0").addWindow(10,10,800,600,"Context Menu Demo")\nwnd!.setCallback(BBjAPI.ON_CLOSE,"byebye")\nwnd!.setCallback(BBjAPI.ON_RESIZE,"resize")\n\ngosub main\nprocess_events\n\nmain:\n  declare SqlQueryBC sbc!\n  declare ResultSet rs!\n  declare BBjGridExWidget grid!\n\n  sbc! = new SqlQueryBC(BBjAPI().getJDBCConnection("ChileCompany"))\n  rs! = sbc!.retrieve("SELECT * FROM CUSTOMER")\n\n  rem /**\n  rem  * Create a new context menu to attach to the grid\n  rem  */\n  menu! = new GxContextMenu()\n\n  rem /**\n  rem  * Add some predefined items with their actions to the menu\n  rem  */\n  menu!.addItem(GxContextMenuItem.AUTO_SIZE_ALL())\n  menu!.addItem(GxContextMenuItem.RESET_COLUMNS())\n  menu!.addItem(GxContextMenuItem.EXPORT())\n  menu!.addItem(GxContextMenuItem.SEPARATOR())\n\n  rem /**\n  rem  * Create custom menu items\n  rem  *\n  rem  * Any custom menu item requires two params , an id (used for handling events) and a label\n  rem  * When the item is clicked on the client , the client will notify the grid with an event\n  rem  * using the chosen id so you can use the grid\'s setCallback method to handle the event\n  rem  */\n\n  direction! = new GxContextMenuItem(6000,"Show Direction")\n  direction!.setIcon("http://icons.iconarchive.com/icons/papirus-team/papirus-apps/256/maps-icon.png" , 20 , 20)\n  direction!.setTooltip("Open the location in Google Maps")\n  menu!.addItem(direction!)\n\n  namepedia! = new GxContextMenuItem(6001,"Search Firstname in Namepedia")\n  namepedia!.setIcon("http://icons.iconarchive.com/icons/papirus-team/papirus-apps/256/godot-icon.png" , 20 , 20)\n  namepedia!.setTooltip("Search First Name in Namepedia")\n  menu!.addItem(namepedia!)\n\n  menu!.addItem(GxContextMenuItem.SEPARATOR())\n\n  copy! = new GxContextMenuItem(6002,"Copy Functions")\n    submenu! = new GxContextMenu()\n    submenu!.addItem(GxContextMenuItem.COPY())\n    submenu!.addItem(GxContextMenuItem.COPY_WITH_HEADERS())\n  copy!.setSubMenu(submenu!)\n  menu!.addItem(copy!)\n\n  rem /**\n  rem  * init the grid and attach the menu items callbacks\n  rem  */\n  grid! = new BBjGridExWidget(wnd!,100,0,0,800,600)\n  grid!.getOptions().setContextMenu(menu!)\n  grid!.setData(rs!)\n  grid!.setCallback(6000,"onShowDirection")\n  grid!.setCallback(6001,"onShowFirstName")\nreturn\n\nonShowDirection:\n  ev! = BBjAPI().getLastEvent()\n  ev! = ev!.getObject()\n  row! = ev!.getRow().asDataRow()\n  query$ = java.net.URLEncoder.encode(row!.getFieldAsString("BILL_ADDR1").trim() + ","  + row!.getFieldAsString("COUNTRY").trim())\n  url$ = "https://www.google.com/maps/search/?api=1&query=" + query$\n  BBjAPI().getThinClient().browse(url$)\nreturn\n\nonShowFirstName:\n  ev! = BBjAPI().getLastEvent()\n  ev! = ev!.getObject()\n  row! = ev!.getRow().asDataRow()\n  query$ = java.net.URLEncoder.encode(row!.getFieldAsString("FIRST_NAME").trim())\n  url$ = "http://www.namepedia.org/en/firstname/?q=" + query$\n  BBjAPI().getThinClient().browse(url$)\nreturn\n\nresize:\n  ev! = BBjAPI().getLastEvent()\n  w=ev!.getWidth()\n  h=ev!.getHeight()\n  grid!.setSize(w,h)\nreturn\n\nbyebye:\nbye\n')),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"BBjGridExWidget - Sidebar",src:n(7910).Z,width:"928",height:"703"})))}m.isMDXComponent=!0},7910:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/context-menu-all-togther-334f9da49e4dc2993e2acd4f144eb0e7.png"},3949:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/context-menu-c437ea0ce73f92ae2cfa88b2725bf035.png"}}]);