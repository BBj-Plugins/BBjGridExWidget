"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6250],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),d=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=d(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,l=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=d(r),f=i,g=p["".concat(c,".").concat(f)]||p[f]||u[f]||l;return r?n.createElement(g,a(a({ref:t},s),{},{components:r})):n.createElement(g,a({ref:t},s))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=r.length,a=new Array(l);a[0]=p;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var d=2;d<l;d++)a[d]=r[d];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},3868:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var n=r(7462),i=(r(7294),r(3905));const l={sidebar_position:3,title:"Quick Filter"},a=void 0,o={unversionedId:"filtering/quick-filter",id:"filtering/quick-filter",title:"Quick Filter",description:"In addition to the column specific filtering, a 'quick filter' can also be applied.",source:"@site/docs/filtering/quick-filter.md",sourceDirName:"filtering",slug:"/filtering/quick-filter",permalink:"/BBjGridExWidget/docs/filtering/quick-filter",draft:!1,editUrl:"https://github.com/BBj-Plugins/BBjGridExWidget/tree/dev/website/docs/filtering/quick-filter.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Quick Filter"},sidebar:"tutorialSidebar",previous:{title:"GxFilterSetFilter",permalink:"/BBjGridExWidget/docs/filtering/columns-filter/gx-filter-set-filter"},next:{title:"Rendering",permalink:"/BBjGridExWidget/docs/category/rendering"}},c={},d=[{value:"Example: Quick Filter",id:"example-quick-filter",level:2}],s={toc:d};function u(e){let{components:t,...l}=e;return(0,i.kt)("wrapper",(0,n.Z)({},s,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"In addition to the column specific filtering, a 'quick filter' can also be applied."),(0,i.kt)("p",null,'The quick filter text will check all words provided against the full row. For example if the text provided is "Tony Ireland", the quick filter will only include rows with both "Tony" AND "Ireland" in them.'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-BBj"},'grid!.setQuickFilter("new filter text")\n')),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Quick Filter is a case-insensitive filter which is applied on the client (grid) data, not the ResultSet.")),(0,i.kt)("h2",{id:"example-quick-filter"},"Example: Quick Filter"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-BBj"},'use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidget\nuse com.basiscomponents.db.ResultSet\nuse com.basiscomponents.bc.SqlQueryBC\n\ndeclare auto BBjTopLevelWindow wnd!\n\nwnd! = BBjAPI().openSysGui("X0").addWindow(10,10,800,600,"Search Demo")\nwnd!.setCallback(BBjAPI.ON_CLOSE,"byebye")\n\nst! = wnd!.addStaticText(200,20,10,220,25,"Enter a term to search the grid\'s data:")\ned! = wnd!.addEditBox(250,250,10,250,22,"")\ned!.setCallback(BBjAPI.ON_EDIT_MODIFY,"onSearchEntry")\n\ngosub main\nprocess_events\n\nmain:\n  declare SqlQueryBC sbc!\n  declare ResultSet rs!\n  declare BBjGridExWidget grid!\n\n  sbc! = new SqlQueryBC(BBjAPI().getJDBCConnection("CDStore"))\n  rs! = sbc!.retrieve("SELECT  * FROM CDINVENTORY")\n\n  grid! = new BBjGridExWidget(wnd!,100,0,40,800,560)\n  grid!.setData(rs!)\nreturn\n\nonSearchEntry:\n  search! = ed!.getText()\n  grid!.setQuickFilter(search!)\nreturn\n\nbyebye:\nbye\n')),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"BBjGridExWidget - Quick Filter",src:r(9415).Z,width:"853",height:"674"})))}u.isMDXComponent=!0},9415:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/quick-filter-6cd9719673431e12cbe4d47019eeb005.gif"}}]);