"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2773],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),d=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return i.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(n),m=r,g=c["".concat(s,".").concat(m)]||c[m]||u[m]||a;return n?i.createElement(g,o(o({ref:t},p),{},{components:n})):i.createElement(g,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var d=2;d<a;d++)o[d]=n[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7748:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var i=n(7462),r=(n(7294),n(3905));const a={sidebar_position:5,title:"Editing Expressions"},o=void 0,l={unversionedId:"editing/editing-expressions",id:"editing/editing-expressions",title:"Editing Expressions",description:"Columns can be configured to enable or disable editing based on a condition executed by the editing expression.",source:"@site/docs/editing/editing-expressions.md",sourceDirName:"editing",slug:"/editing/editing-expressions",permalink:"/BBjGridExWidget/docs/editing/editing-expressions",draft:!1,editUrl:"https://github.com/BBj-Plugins/BBjGridExWidget/tree/dev/website/docs/editing/editing-expressions.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Editing Expressions"},sidebar:"tutorialSidebar",previous:{title:"Value Setters",permalink:"/BBjGridExWidget/docs/editing/value-setters"},next:{title:"Cell Editors",permalink:"/BBjGridExWidget/docs/editing/cell-editors"}},s={},d=[{value:"Configuring Editing Expressions",id:"configuring-editing-expressions",level:2},{value:"Example",id:"example",level:2}],p={toc:d};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Columns can be configured to enable or disable editing based on a condition executed by the editing expression."),(0,r.kt)("h2",{id:"configuring-editing-expressions"},"Configuring Editing Expressions"),(0,r.kt)("p",null,"An editing expression is executed to determine whether the column is editable or not.  it should return ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," if the editing should be enabled or ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," if the editing should be disabled."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bbj"},'column!.setValueSetterExpression("return true")\n')),(0,r.kt)("p",null,"When working with expressions keep the following points in mind:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If the expression has the word ",(0,r.kt)("inlineCode",{parentName:"li"},"return")," in it, then we will assume it is a multi-line expression and will not wrap it."),(0,r.kt)("li",{parentName:"ul"},"If the expression does not have the word ",(0,r.kt)("inlineCode",{parentName:"li"},"return")," in it, then we will insert the ",(0,r.kt)("inlineCode",{parentName:"li"},"return")," statement and the ",(0,r.kt)("inlineCode",{parentName:"li"},";")," for you."),(0,r.kt)("li",{parentName:"ul"},"If the expression has many lines, then you will need to provide the ",(0,r.kt)("inlineCode",{parentName:"li"},";")," at the end of each line and also provide the ",(0,r.kt)("inlineCode",{parentName:"li"},"return")," statement.")),(0,r.kt)("p",null,"Expressions have access to several predefined variables:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Variable"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"data"),(0,r.kt)("td",{parentName:"tr",align:null},"Mapped from the DataRow")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ctx"),(0,r.kt)("td",{parentName:"tr",align:null},"The grid ",(0,r.kt)("a",{parentName:"td",href:"../data/client-context"},"client context"))))),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"Below shows an example using value setters. The following can be noted:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"All Columns are editable by default."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./full-row-editing"},"Full row editing")," is enabled."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"LABEL")," & ",(0,r.kt)("inlineCode",{parentName:"li"},"ARTIST")," columns configure an editing expression to disable editing when the ",(0,r.kt)("inlineCode",{parentName:"li"},"CDNUMBER")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"000002")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"000004"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bbj",metastring:"showLineNumbers",showLineNumbers:!0},'use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidget\nuse com.basiscomponents.db.DataRow\nuse com.basiscomponents.db.ResultSet\nuse com.basiscomponents.bc.SqlQueryBC\n\nwnd! = BBjAPI().openSysGui("X0").addWindow(10, 10, 600, 600, "Editing Expressions")\nwnd!.setCallback(BBjAPI.ON_CLOSE,"byebye")\n\nsbc! = new SqlQueryBC(BBjAPI().getJDBCConnection("CDStore"))\nrs! = sbc!.retrieve("SELECT CDNUMBER, LABEL, ARTIST FROM CDINVENTORY")\n\ngrid! = new BBjGridExWidget(wnd!, 100, 0, 0, 600, 600)\noptions! = grid!.getOptions()\noptions!.setEditable(1)\noptions!.setEditType(grid!.GRID_EDITTYPE_ROW())\ngrid!.setFitToGrid()\ngrid!.setData(rs!)\n\nisEditableExp! = "[\'000002\',\'000004\'].indexOf(data.CDNUMBER) === -1"\n\ntitleColumn! = grid!.getColumn("LABEL")\ntitleColumn!.setEditableExpression(isEditableExp!)\n\nartistColumn! = grid!.getColumn("ARTIST")\nartistColumn!.setEditableExpression(isEditableExp!)\n\nprocess_events\n\nbyebye:\nbye\n')))}u.isMDXComponent=!0}}]);