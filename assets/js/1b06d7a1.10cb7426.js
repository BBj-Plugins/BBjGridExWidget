"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5365],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),b=a,m=u["".concat(l,".").concat(b)]||u[b]||p[b]||i;return n?r.createElement(m,o(o({ref:t},c),{},{components:n})):r.createElement(m,o({ref:t},c))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var d=2;d<i;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7940:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:1,title:"Sidebar",sidebar_class_name:"enhanced-feature",description:"This section covers how to configure and use the Side Bar API"},o=void 0,s={unversionedId:"accessories/sidebar",id:"accessories/sidebar",title:"Sidebar",description:"This section covers how to configure and use the Side Bar API",source:"@site/docs/accessories/sidebar.md",sourceDirName:"accessories",slug:"/accessories/sidebar",permalink:"/BBjGridExWidget/docs/accessories/sidebar",draft:!1,editUrl:"https://github.com/BBj-Plugins/BBjGridExWidget/tree/dev/website/docs/accessories/sidebar.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Sidebar",sidebar_class_name:"enhanced-feature",description:"This section covers how to configure and use the Side Bar API"},sidebar:"tutorialSidebar",previous:{title:"Accessories",permalink:"/BBjGridExWidget/docs/category/accessories"},next:{title:"Tool Panels",permalink:"/BBjGridExWidget/docs/category/tool-panels"}},l={},d=[{value:"Access Tool Panels",id:"access-tool-panels",level:2},{value:"Hide Side bar",id:"hide-side-bar",level:2},{value:"Disable a tool panel",id:"disable-a-tool-panel",level:2}],c={toc:d};function p(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/Version-Enhanced-038279",alt:"BBjGridExWidget - Enhanced Version"}),"\n",(0,a.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/BBj-SAM%20required-orange",alt:"BBjGridExWidget - SAM Required"})),(0,a.kt)("p",null,"This section covers how to configure and use the Side Bar API. "),(0,a.kt)("p",null,"The default side bar contains the Columns and Filters tool panels. To get access to the default side bar use\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"BBjGridExWidget::getSidebar")," method. The method will return an instance of ",(0,a.kt)("a",{parentName:"p",href:"https://bbj-plugins.github.io/BBjGridExWidget/javadoc/GxSidebar/GxDefaultSidebar.html"},"GxDefaultSidebar")," "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-BBj"},"method public GxSidebar getSidebar()\n")),(0,a.kt)("h2",{id:"access-tool-panels"},"Access Tool Panels"),(0,a.kt)("p",null,"The default side bar pre-configure two tool panels by default "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Columns tool panel"),": An instance of the ",(0,a.kt)("a",{parentName:"li",href:"https://bbj-plugins.github.io/BBjGridExWidget/javadoc/GxSidebar/GxColumnsToolpanel.html"},"GxColumnsToolpanel")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Filters tool panel"),": An instance of the ",(0,a.kt)("a",{parentName:"li",href:"https://bbj-plugins.github.io/BBjGridExWidget/javadoc/GxSidebar/GxFiltersToolpanel.html"},"GxFiltersToolpanel"))),(0,a.kt)("p",null,"To access a specific tool panel in the sidebar use the tool panel's ID"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-BBj"},"use ::BBjGridExWidget/GxSidebar.bbj::GxSidebar\nuse ::BBjGridExWidget/GxSidebar.bbj::GxColumnsToolpanel \n\ndeclare auto  GxSidebar sidebar!\nsidebar! = grid!.getSidebar()\n\ndeclare auto  GxColumnsToolpanel columnsToolpanel!\ncolumnsToolpanel! = sidebar!.getToolpanels().get(GxColumnsToolpanel.getId())\ncolumnsToolpanel!.setSuppressValues(1)\n")),(0,a.kt)("h2",{id:"hide-side-bar"},"Hide Side bar"),(0,a.kt)("p",null,"In order to hide the sidebar, you can use the Sidebar method ",(0,a.kt)("inlineCode",{parentName:"p"},"GxSidebar::setVisible(BBjNumber visible!)")," method.\nIf you want to render the grid initially with a sidebar hidden set the ",(0,a.kt)("inlineCode",{parentName:"p"},"GxSidebar:HiddenByDefault")," property to ",(0,a.kt)("inlineCode",{parentName:"p"},"true")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-BBj"},"declare auto  GxSidebar sidebar!\n\nsidebar! = grid!.getSidebar()\nsidebar!.setHiddenByDefault(1)\n")),(0,a.kt)("h2",{id:"disable-a-tool-panel"},"Disable a tool panel"),(0,a.kt)("p",null,"In order to disable or remove a specific panel, remove the the panel using its ID from the ",(0,a.kt)("inlineCode",{parentName:"p"},"GxSidebar:Toolpanels")," map."),(0,a.kt)("p",null,"The following sample removes the ",(0,a.kt)("inlineCode",{parentName:"p"},"GxColumnsToolpanel")," from the sidebar."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-BBj"},'use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidget\nuse com.basiscomponents.db.ResultSet\nuse com.basiscomponents.bc.SqlQueryBC\nuse ::BBjGridExWidget/GxSidebar.bbj::GxSidebar\nuse ::BBjGridExWidget/GxSidebar.bbj::GxColumnsToolpanel \n\ndeclare auto BBjTopLevelWindow wnd!\nwnd! = BBjAPI().openSysGui("X0").addWindow(10, 10, 800, 600, "Sidebar")\nwnd!.setCallback(BBjAPI.ON_CLOSE,"byebye")\n\ngosub main\nprocess_events\n\nmain:\n  declare SqlQueryBC sbc!\n  declare ResultSet rs!\n  declare BBjGridExWidget grid!\n  declare auto  GxSidebar sidebar!\n  declare auto  GxColumnsToolpanel columnsToolpanel!\n  \n  sbc! = new SqlQueryBC(BBjAPI().getJDBCConnection("CDStore"))\n  rs! = sbc!.retrieve("SELECT * FROM CDINVENTORY")\n  \n  grid! = new BBjGridExWidget(wnd!, 100, 0, 0, 800, 600)\n\n  sidebar! = grid!.getSidebar()\n  sidebar!.getToolpanels().remove(GxColumnsToolpanel.getId())\n\n  grid!.setData(rs!)\nreturn\n\nbyebye:\nbye\n')),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"BBjGridExWidget - Sidebar API",src:n(8889).Z,width:"802",height:"632"})))}p.isMDXComponent=!0},8889:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/sidebar-api-acd3aad02d566d9269c28bb0a9853589.png"}}]);