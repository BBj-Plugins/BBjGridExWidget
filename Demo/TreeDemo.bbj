use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidget
use com.basiscomponents.bc.SqlQueryBC
use com.basiscomponents.db.tree.DataTree
use java.sql.Types

? 'HIDE'

declare auto BBjTopLevelWindow wnd!
declare auto BBjListButton lb_db!
declare auto BBjListButton lb_tbl!
declare auto BBjToolButton btn_fit!
declare BBjGridExWidget grid!

wnd! = BBjAPI().openSysGui("X0").addWindow(10,10,1024,768,"BBj Grid Ex Demo")


grid! = new BBjGridExWidget(wnd!,100,0,0,1024,768)

grid!		.setShowGroupChildCount(1)

grid!       .setGroupColumnLabel("Customer")
grid!       .setSelectionMode(grid!.GRID_SELECT_ROW())
grid!       .setCallback(grid!.ON_GRID_SELECT_ROW(),"onRowSelect")
    
wnd!        .setCallback(BBjAPI.ON_CLOSE,"byebye")
wnd!        .setCallback(BBjAPI.ON_RESIZE,"resize")

gosub fillGrid

process_events

   
fillGrid:

    qbc! = new SqlQueryBC(BBjAPI().getJDBCConnection("ChileCompany"))

    sql$="SELECT TOP 2
:   trim(LAST_NAME)+', '+trim(FIRST_NAME)+' ('+trim(CUST_NUM)+')'  AS '__node__name',
:   CUST_NUM        ,
:   FIRST_NAME      ,
:   LAST_NAME       ,
:   COMPANY         ,
:   BILL_ADDR1      ,
:   BILL_ADDR2      ,
:   CITY            ,
:   STATE           ,
:   COUNTRY         ,
:   POST_CODE       ,
:   PHONE           ,
:   FAX             ,
:   SALESPERSON     ,
:   SHIP_ZONE       ,
:   SHIP_METHOD     ,
:   CURRENT_BAL     ,
:   OVER_30         ,
:   OVER_60         ,
:   OVER_90         ,
:   OVER_120        ,
:   SALES_MTD       ,
:   SALES_YTD       ,
:   SALES_LY        ,
:   LAST_PURCH_DATE ,
:   LAST_PAY_DATE   ,
:   CREDIT_CODE 
:   FROM CUSTOMER "


    dt! = new DataTree()
    
    c1! = dt!.getRoot().addChild("Domestic Customers")
    c11! = c1!.addChild("New Mexico")
    c12! = c1!.addChild("Out of State")
    c2! = dt!.getRoot().addChild("Global Customers")
    
    r! = qbc!.retrieve(sql$+"WHERE COUNTRY='US' AND STATE != 'NM'")
    
    c11!.setResultSet(r!)
    c11!.setFieldValue("STATE","(other)")
    
    x11 = r!.sum("SALES_YTD")
    y11 = r!.sum("SALES_LY")
    
    c11!.setFieldValue("SALES_YTD", x11)
    c11!.setFieldValue("SALES_LY", y11)
    c11!.setFieldValue("PARENT_ID", "CUSTOMERS_MEXICO")

    r! = qbc!.retrieve(sql$+"WHERE COUNTRY='US'AND STATE='NM'")
    
    c12!.setResultSet(r!)
    
    x12 = r!.sum("SALES_YTD")
    y12 = r!.sum("SALES_LY")
    
    c12!.setFieldValue("STATE","NM")
    c12!.setFieldValue("COUNTRY","US")
    c12!.setFieldValue("SALES_YTD",x12)
    c12!.setFieldValue("SALES_LY", y12)
    c12!.setFieldValue("PARENT_ID", "CUSTOMERS_OUT_OF_STATE")
    
    c1!.setFieldValue("SALES_YTD",x11+x12)
    c1!.setFieldValue("SALES_LY", y11+y12)
    c1!.setFieldValue("PARENT_ID", "CUSTOMERS")

    r! = qbc!.retrieve(sql$+"WHERE COUNTRY!='US' AND STATE=''")
    
    c2!.setResultSet(r!)
    c2!.setFieldValue("STATE","(N/A)")
    c2!.setFieldValue("COUNTRY","(World)")
    
    x2 = r!.sum("SALES_YTD")
    y2 = r!.sum("SALES_LY")

    c2!.setFieldValue("SALES_YTD", x2)
    c2!.setFieldValue("SALES_LY", y1)
    c2!.setFieldValue("PARENT_ID", "CUSTOMERS_GLOBAL")
    
    grid!.addColumn("CUST_NUM","ID")
    grid!.addColumn("COMPANY","Company Name")
    grid!.addColumn("CITY","Town")
    grid!.addColumn("STATE","State")
    grid!.addColumn("COUNTRY","Country")
    grid!.addColumn("PHONE","Telephone")
    grid!.addColumn("FAX","Telecopier")
    grid!.addColumn("SALESPERSON","Sales Rep")
    grid!.addColumn("SALES_YTD","Sales YTD",8)
    grid!.addColumn("SALES_LY","Sales Prev.Y.",8)
    
    grid!.pinColumn("CUST_NUM","left")
    grid!.pinColumn("SALES_YTD","right")
    grid!.pinColumn("SALES_LY","right")
    
    grid!.setMultipleSelection(1)
    grid!.setShowGroupSelectionCheckbox(1)
    grid!.setGroupSelectsChildren(1)
    
    grid!.setData(dt!,"CUST_NUM","PARENT_ID")
    
    rem set the width for the tree node column
    grid!.setColumnWidth("$TREENODE",400)
    
    grid!.setColumnWidth("CUST_NUM",100)
    
    grid!.expandAll()
    
return


byebye:
    bye
    
resize:
    ev! = BBjAPI().getLastEvent()
    grid!.setSize(ev!.getWidth(),ev!.getHeight())
return

onRowSelect: 

    ev! = BBjAPI().getLastEvent()
    ev! = ev!.getObject()
    
    sel! =  grid!.getSelectedRows()
  
    if INFO(3,6)="5" then
      a = msgbox( ev!.getChangedRows().toString(), 0, "Selection")
    else
      print 'SHOW', 
      print ev!.getRowCount(), " ROW(s) AFFECTED By Event:" , ev!.getChangedRows()
      print ev!.getSelectedRowCount()," ROW(S) SELECTED By Event: ",ev!.getNewSelectedRows()
      print ev!.getDeselectedRowCount()," ROW(S) DESELECTED By Event: ",ev!.getNewDeselectedRows()
      print ev!.getSelectedRows().size()," ROW(S) NOW SELECTED : ", ev!.getSelectedRows()
      print  "------------------------------------------------------------------------"
    fi

return      
