use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidget
use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidgetStatusBarTotalRowCountComponent
use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidgetStatusBarFilteredRowCountComponent
use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidgetStatusBarTotalAndFilteredRowCountComponent
use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidgetStatusBarSelectedRowCountComponent
use com.basiscomponents.bc.SqlQueryBC
use java.sql.Types

? 'HIDE'

declare auto BBjTopLevelWindow wnd!
declare BBjGridExWidget grid!


wnd! = BBjAPI().openSysGui("X0").addWindow(10,10,800,600,"Statusbar Demo")
wnd!.setCallback(BBjAPI.ON_CLOSE,"byebye")
wnd!.setCallback(BBjAPI.ON_RESIZE,"resize")

grid! = new BBjGridExWidget(wnd!,100,0,0,800,600)
grid!.setSelectionMode(grid!.GRID_SELECT_ROW())
grid!.setMultipleSelection(1)
grid!.setEnableFilter(1)
rem grid!.setEnableFloatingFilter(1)

statusbar! = grid!.getStatusbar()
statusbar!.addComponent(new BBjGridExWidgetStatusBarTotalRowCountComponent())
statusbar!.addComponent(new BBjGridExWidgetStatusBarFilteredRowCountComponent())
statusbar!.addComponent(new BBjGridExWidgetStatusBarTotalAndFilteredRowCountComponent("right"))
statusbar!.addComponent(new BBjGridExWidgetStatusBarSelectedRowCountComponent("center"))

gosub fillGrid

process_events

fillGrid:

declare SqlQueryBC sbc!

sbc! = new SqlQueryBC(BBjAPI().getJDBCConnection("CDStore"))
rs! = sbc!.retrieve("SELECT  * FROM CDINVENTORY")
grid!.setData(rs!)
return

byebye:
bye

resize:
ev! = BBjAPI().getLastEvent()
w=ev!.getWidth()
h=ev!.getHeight()
grid!.setSize(w,h)
return
