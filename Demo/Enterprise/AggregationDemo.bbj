use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidget
use ::BBjGridExWidget/BBjGridExWidgetRenderers.bbj::BBjGridExWidgetRendererGroupCellRenderer
use ::BBjGridExWidget/BBjGridExWidgetExpressions.bbj::BBjGridExWidgetExpression
use com.basiscomponents.bc.SqlQueryBC
use java.sql.Types
use com.google.gson.JsonObject

? 'HIDE'

declare auto BBjTopLevelWindow wnd!
declare BBjGridExWidget grid!

lic!=System.getProperty("bbjgridexwidget.license")

if lic!=null() or str(lic!)="" then
    a=msgbox("set license key in bbj.properties under bbjgridexwidget.license=<yourlicense>",48,"Demo for Enterprise Features")
    release
fi

BBjGridExWidget.setLicenseKey(lic!)

wnd! = BBjAPI().openSysGui("X0").addWindow(10,10,800,600,"BBj Grid Ex Demo")
cb! = wnd!.addCheckBox(203,12,10,200,22,"Enable Read Only Mode")
cb!.setCallback(BBjAPI.ON_CHECK_OFF,"onUseCheckbox")
cb!.setCallback(BBjAPI.ON_CHECK_ON,"onUseCheckbox")
wnd!        .setCallback(BBjAPI.ON_CLOSE,"byebye")
wnd!        .setCallback(BBjAPI.ON_RESIZE,"resize")

gosub setupGrid

process_events
   
setupGrid:

    declare SqlQueryBC sbc!
    sbc! = new SqlQueryBC(BBjAPI().getJDBCConnection("CDStore"))
    rs! = sbc!.retrieve("SELECT LABEL , MUSICTYPE , PLAYINGTIME , COST  FROM CDINVENTORY")
    
    grid! = new BBjGridExWidget(wnd!,100,0,40,800,560)
    grid!.setData(rs!,0)
    grid!.setGroupIncludeFooter(1)
    grid!.setGroupIncludeTotalFooter(1)
    grid!.setRowGroupPanelShow(grid!.GRID_GROUPPANEL_SHOW_VISIBLE())
         
        rem Group rows by music type
        type! = grid!.getColumn("MUSICTYPE")
        type!.setEnableRowGroup(1)
        type!.setRowGroupIndex(0)
        
        rem aggregate on playingtime
        timeFooterExp! = "'PlayingTime ' + column.aggFunc + ' (' + x + ')' "
        time! = grid!.getColumn("PLAYINGTIME")
        time!.setEnableValue(1)
        time!.setAggFunc("sum")
        time!.setValueGetterExpression("data ? Number(data.PLAYINGTIME) : null")
        time!.setCellRenderer(new BBjGridExWidgetRendererGroupCellRenderer(timeFooterExp!))

        rem aggregate on cost
        constFooterExp! = "if(x) {return column.aggFunc + ':' + BBj.Masks.Types.number(x.toFixed(2), '### ##0.00' , ',' , '.')  + ' $'} else {return x}"
        cost! = grid!.getColumn("COST")
        cost!.setEnableValue(1)
        cost!.setAggFunc("sum")
        cost!.setCellRenderer(new BBjGridExWidgetRendererGroupCellRenderer(constFooterExp!))
    grid!.render()
 
return

onUseCheckbox:
    useCheckbox! = cb!.isSelected()
    grid!.setFunctionsReadOnly(useCheckbox!)
return
    
byebye:
    bye
    
resize:
    ev! = BBjAPI().getLastEvent()
    grid!.setSize(ev!.getWidth(),ev!.getHeight()-40)
return


