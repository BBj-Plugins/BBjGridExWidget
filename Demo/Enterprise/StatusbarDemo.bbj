use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidget
use ::BBjGridExWidget/BBjGridExWidgetStatusBarTotalRowCountComponent.bbj::BBjGridExWidgetStatusBarTotalRowCountComponent
use ::BBjGridExWidget/BBjGridExWidgetStatusBarFilteredRowCountComponent.bbj::BBjGridExWidgetStatusBarFilteredRowCountComponent
use ::BBjGridExWidget/BBjGridExWidgetStatusBarTotalAndFilteredRowCountComponent.bbj::BBjGridExWidgetStatusBarTotalAndFilteredRowCountComponent
use ::BBjGridExWidget/BBjGridExWidgetStatusBarSelectedRowCountComponent.bbj::BBjGridExWidgetStatusBarSelectedRowCountComponent
use com.basiscomponents.bc.SqlQueryBC
use java.sql.Types

? 'HIDE'

declare auto BBjTopLevelWindow wnd!
declare BBjGridExWidget grid!

lic!=System.getProperty("bbjgridexwidget.license")

if lic!=null() or str(lic!)="" then
    a=msgbox("set license key in bbj.properties under bbjgridexwidget.license=<yourlicense>",48,"Demo for Enterprise Features")
    release
fi

BBjGridExWidget.setLicenseKey(lic!)

wnd! = BBjAPI().openSysGui("X0").addWindow(10,10,800,600,"Statusbar Demo")
wnd!.setCallback(BBjAPI.ON_CLOSE,"byebye")
wnd!.setCallback(BBjAPI.ON_RESIZE,"resize")

rem btn! = wnd!.addButton(202,10,10,80,22,"SELECT")
rem btn!.setCallback(BBjAPI.ON_BUTTON_PUSH,"onToggle")

static! = wnd!.addStaticText(202,10,10,200,25,"Toggle Statusbar Components" , $0000$ )
totalRow! = wnd!.addCheckBox(203,10,30,200,22,"Total Row")
totalRow!.setSelected(1)
totalRow!.setName(BBjGridExWidgetStatusBarTotalRowCountComponent.getName())
totalRow!.setCallback(BBjAPI.ON_CHECK_OFF,"onToggle")
totalRow!.setCallback(BBjAPI.ON_CHECK_ON,"onToggle")

filteredRow! = wnd!.addCheckBox(204,10,50,200,22,"Filtered Row")
filteredRow!.setSelected(1)
filteredRow!.setName(BBjGridExWidgetStatusBarFilteredRowCountComponent.getName())
filteredRow!.setCallback(BBjAPI.ON_CHECK_OFF,"onToggle")
filteredRow!.setCallback(BBjAPI.ON_CHECK_ON,"onToggle")

totalAndFilteredRow! = wnd!.addCheckBox(205,10,70,200,22,"Total And Filtered Row")
totalAndFilteredRow!.setSelected(1)
totalAndFilteredRow!.setName(BBjGridExWidgetStatusBarTotalAndFilteredRowCountComponent.getName())
totalAndFilteredRow!.setCallback(BBjAPI.ON_CHECK_OFF,"onToggle")
totalAndFilteredRow!.setCallback(BBjAPI.ON_CHECK_ON,"onToggle")

selectedRow! = wnd!.addCheckBox(206,10,90,200,22,"Selected Row")
selectedRow!.setSelected(1)
selectedRow!.setName(BBjGridExWidgetStatusBarSelectedRowCountComponent.getName())
selectedRow!.setCallback(BBjAPI.ON_CHECK_OFF,"onToggle")
selectedRow!.setCallback(BBjAPI.ON_CHECK_ON,"onToggle")

grid! = new BBjGridExWidget(wnd!,100,200,0,600,600)
grid!.setMultipleSelection(1)
grid!.setEnableFilter(1)
rem grid!.setEnableFloatingFilter(1)

statusbar! = grid!.getStatusbar()
statusbar!.addComponent(new BBjGridExWidgetStatusBarTotalRowCountComponent())
statusbar!.addComponent(new BBjGridExWidgetStatusBarFilteredRowCountComponent())
statusbar!.addComponent(new BBjGridExWidgetStatusBarTotalAndFilteredRowCountComponent("right"))
statusbar!.addComponent(new BBjGridExWidgetStatusBarSelectedRowCountComponent("center"))

gosub fillGrid

process_events

fillGrid:

declare SqlQueryBC sbc!

sbc! = new SqlQueryBC(BBjAPI().getJDBCConnection("CDStore"))
rs! = sbc!.retrieve("SELECT  * FROM CDINVENTORY")
grid!.setData(rs!)
return

byebye:
bye

resize:
ev! = BBjAPI().getLastEvent()
w=ev!.getWidth()
h=ev!.getHeight()
grid!.setSize(w-200,h)
return

onToggle:
event! = BBjAPI().getLastEvent()
control! = event!.getControl()

name$ = control!.getName()
visiblity! = iff(control!.isSelected() , 1 ,0)

statusbar! = grid!.getStatusbar()
statusbar!.setComponentVisibility(name$  , visiblity!)
return 
