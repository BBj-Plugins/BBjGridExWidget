rem /**
rem  * This file is part of the BBjGridExWidget plugin.
rem  * (c) Basis Europe <eu@basis.com>
rem  *
rem  * For the full copyright and license information, please view the LICENSE
rem  * file that was distributed with this source code.
rem  */
use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidget
use ::BBjGridExWidget/GxClientModels.bbj::GxClientRowModel
use com.basiscomponents.bc.SqlQueryBC
use java.sql.Types

? 'HIDE'

declare auto BBjTopLevelWindow wnd!
declare BBjGridExWidget grid!

wnd! = BBjAPI().openSysGui("X0").addWindow(10,10,800,600,"Selection Demo")
wnd!.setCallback(BBjAPI.ON_CLOSE,"byebye")
wnd!.setCallback(BBjAPI.ON_RESIZE,"resize")

SysGui! = BBjAPI().getSysGui()

boldFont! = SysGui!.makeFont("arial",13,BBjFont.FONT_BOLD)
boldFontSmall! = SysGui!.makeFont("arial",10,BBjFont.FONT_BOLD)
fontSmall! = SysGui!.makeFont("arial",10,BBjFont.FONT_PLAIN)
icon! = SysGui!.getImageManager().loadImageFromFile("BBjGridExWidget/Demo/assets/images/help.png")


REM ------------------Start Left Panel -------------------------

leftPanelTitle! = wnd!.addStaticText(202,10,10,200,25,"Selection Behaviors" , $0000$ )
leftPanelTitle!.setFont(boldFont!)

REM --- Start Mutli Selection Controls
multipleSelectionHelp! = wnd!.addButton(203,10,50,20,22,"")
multipleSelectionHelp!.setImage(icon!)
multipleSelectionHelp!.setImageSize(10 , 10)
multipleSelectionHelp!.setToolTipText("Click to learn more.")
multipleSelectionHelp!.setCallback(BBjAPI.ON_BUTTON_PUSH,"onMultipleSelectionHelp")
multipleSelectionHelp!.setNoEdge(1)

multipleSelection! = wnd!.addCheckBox(204,32,50,200,22,"Multiple Selection")
multipleSelection!.setCallback(BBjAPI.ON_CHECK_OFF,"onMultipleSelectionToggle")
multipleSelection!.setCallback(BBjAPI.ON_CHECK_ON,"onMultipleSelectionToggle")
REM --- End Mutli Selection Controls

REM --- Start Row Multi Select With Click Controls
rowMultiSelectWithClickHelp! = wnd!.addButton(205,10,90,20,22,"")
rowMultiSelectWithClickHelp!.setImage(icon!)
rowMultiSelectWithClickHelp!.setImageSize(10 , 10)
rowMultiSelectWithClickHelp!.setToolTipText("Click to learn more.")
rowMultiSelectWithClickHelp!.setCallback(BBjAPI.ON_BUTTON_PUSH,"onRowMultiSelectWithClickHelp")
rowMultiSelectWithClickHelp!.setNoEdge(1)

rowMultiSelectWithClick! = wnd!.addCheckBox(206,32,90,200,22,"Multi Select With Click")
rowMultiSelectWithClick!.setCallback(BBjAPI.ON_CHECK_OFF,"onRowMultiSelectWithClickToggle")
rowMultiSelectWithClick!.setCallback(BBjAPI.ON_CHECK_ON,"onRowMultiSelectWithClickToggle")
REM --- End Row Multi Select With Click Controls

REM --- Start Row Deselection Controls
rowDeselectionHelp! = wnd!.addButton(207,10,130,20,22,"")
rowDeselectionHelp!.setImage(icon!)
rowDeselectionHelp!.setImageSize(10 , 10)
rowDeselectionHelp!.setToolTipText("Click to learn more.")
rowDeselectionHelp!.setCallback(BBjAPI.ON_BUTTON_PUSH,"onRowDeselectionHelp")
rowDeselectionHelp!.setNoEdge(1)

rowDeselection! = wnd!.addCheckBox(208,32,130,200,22,"Row Deselection")
rowDeselection!.setCallback(BBjAPI.ON_CHECK_OFF,"onRowDeselectionToggle")
rowDeselection!.setCallback(BBjAPI.ON_CHECK_ON,"onRowDeselectionToggle")
REM --- End Row Deselection Controls

REM --- Start Suppress Row Click Selection Controls
suppressRowClickSelectionHelp! = wnd!.addButton(209,10,170,20,22,"")
suppressRowClickSelectionHelp!.setImage(icon!)
suppressRowClickSelectionHelp!.setImageSize(10 , 10)
suppressRowClickSelectionHelp!.setToolTipText("Click to learn more.")
suppressRowClickSelectionHelp!.setCallback(BBjAPI.ON_BUTTON_PUSH,"onSuppressRowClickSelectionHelp")
suppressRowClickSelectionHelp!.setNoEdge(1)

suppressRowClickSelection! = wnd!.addCheckBox(210,32,170,200,22,"Suppress Row Click Selection")
suppressRowClickSelection!.setCallback(BBjAPI.ON_CHECK_OFF,"onSuppressRowClickSelectionToggle")
suppressRowClickSelection!.setCallback(BBjAPI.ON_CHECK_ON,"onSuppressRowClickSelectionToggle")
REM --- End Suppress Row Click Selection Controls


REM --- Start Selection Details
currentSelectionTitle! = wnd!.addStaticText(212,10,240,200,25,"__________________________________________" , $0000$ )

NumOfSelectedRowsKeyStatic! = wnd!.addStaticText(213,10,270,200,25,"Selected Count: " , $0000$ )
NumOfSelectedRowsValueStatic! = wnd!.addStaticText(214,150,270,200,25," 0 Row" , $0000$ )

NumOfSelectedRowsKeyStatic!.setFont(boldFontSmall!)
NumOfSelectedRowsValueStatic!.setFont(fontSmall!)

SelectedRowsKeyStatic! = wnd!.addStaticText(215,10,300,200,200,"Selected Titles: " , $0000$ )
SelectedRowsValueStatic! = wnd!.addStaticText(216,10,320,200,200," " , $0000$ )

SelectedRowsKeyStatic!.setFont(boldFontSmall!)
SelectedRowsValueStatic!.setFont(fontSmall!)
REM --- End Selection Details

REM ------------------End Left Panel -------------------------


REM ------------------Start Right Panel -------------------------

selectionInput! = wnd!.addEditBox(217,220,10,250,22,"")
selectionInput!.setPlaceholder("Enter rows to select, e.g. ""5,7""")

selectionInputButton! = wnd!.addButton(218,468,10,80,22,"Select Rows")
selectionInputButton!.setCallback(BBjAPI.ON_BUTTON_PUSH,"onSelectionInputButton")

grid! = new BBjGridExWidget(wnd!,100,220,40,580,560)
rem Defines how users can move between rows using arrow keys
grid!.getOptions().setNavigationBehavior(grid!.GRID_NAVIGATION_BEHAVIOUR_NEXT_ROW())

rem show checkboxs for selection
rem note this will not disable rows selection by other methods
rem to only allow selection using checkboxs use `setSuppressRowClickSelection(bool)`
grid!.getOptions().setShowSelectionCheckbox(1)
grid!.getOptions().setShowHeaderSelectionCheckbox(1); rem this option will enable multi row selection by default

rem enable checkbox selection when grouping
grid!.getOptions().setShowGroupSelectionCheckbox(1)
grid!.getOptions().setGroupSelectsChildren(1)

grid!.setCallback(grid!.ON_GRID_ROW_SELECT(),"onSelectionEvent")

REM ------------------End Right Panel -------------------------

gosub fillGrid

process_events

fillGrid:
  sbc! = new SqlQueryBC(BBjAPI().getJDBCConnection("CDStore"))
  rs! = sbc!.retrieve("SELECT  * FROM CDINVENTORY")

  grid!.setData(rs!)
return

rerender:
    NumOfSelectedRowsValueStatic!.setText("0 Row(s)")
    SelectedRowsValueStatic!.setText("")
    grid!.render()
return

onMultipleSelectionToggle:
  event! = BBjAPI().getLastEvent()
  control! = event!.getControl()
  grid!.getOptions().setMultipleSelection(control!.isSelected())
  gosub rerender
return

onRowMultiSelectWithClickToggle:
  event! = BBjAPI().getLastEvent()
  control! = event!.getControl()
  isSelected! = control!.isSelected()
  grid!.getOptions().setRowMultiSelectWithClick(control!.isSelected())
  gosub rerender
return

onRowDeselectionToggle:
  event! = BBjAPI().getLastEvent()
  control! = event!.getControl()
  grid!.getOptions().setRowDeselection(control!.isSelected())
  gosub rerender
return

onSuppressRowClickSelectionToggle:
  event! = BBjAPI().getLastEvent()
  control! = event!.getControl()
  grid!.getOptions().setSuppressRowClickSelection(control!.isSelected())
  gosub rerender
return

onSelectionInputButton:
    selection! = selectionInput!.getText()
    sel = num(selection!,err=onMultiSelectionInput)
    grid!.deselectAll()
    grid!.setSelectedRow(sel)

    rem now make sure this row is visible in the middle of the grid
    grid!.ensureIndexVisible(sel,grid!.GRID_ROWPOS_MIDDLE())
return

onMultiSelectionInput:
    if pos(","=selection!) = 0 then
        a=msgbox("Enter a comma separated list of row numbers.",0,"INPUT ERROR")
        return
    fi
    x! = java.util.Arrays.asList(selection!.split(","))

    s! = new BBjVector()

    for i = 0 to x!.size()
      s!.addItem(num(x!.get(i),err=*continue))
    next i

    grid!.deselectAll()
    grid!.setSelectedRows(s!)

    if (s!.size() > 0) then
        rem now make sure the first selected row is visible at the top of the grid
        grid!.ensureIndexVisible(s!.getItem(0),grid!.GRID_ROWPOS_TOP())
    fi
return

onSelectionEvent:
    ev! = BBjAPI().getLastEvent()
    ev! = ev!.getObject()

    rows! =  ev!.getSelectedRows()

    declare auto GxClientRowModel row!
    selectedAsText$ = ""
    it! = rows!.iterator()
    while it!.hasNext()
        row! = it!.next()
        selectedAsText$ = selectedAsText$ + str(row!.asDataRow().getFieldAsString("TITLE")) + " , "
    wend

    NumOfSelectedRowsValueStatic!.setText(str(ev!.getSelectedRowCount()) + " Row(s)")
    SelectedRowsValueStatic!.setText(selectedAsText$)
return

onMultipleSelectionHelp:
    a! = msgbox("Control the type of row selection. When false, then single row selection is enabled, otherwise multi-row selection is enabled. By default, when you select a row, the previously selected row gets unselected. 'Multiple' allows multi-row selection by holding down the Ctrl key while clicking.",0,"Single/Multi-Row Selection")
return

onRowMultiSelectWithClickHelp:
    a! = msgbox("With Multiple Selection checked, set to true to allow multiple/single row(s) to be selected with a single click. For example, if you click to select one row, then click to select another row, the first row will stay selected. Clicking a selected row in this mode will deselect the row. This is useful for touch devices where Ctrl- and Shift-clicking is not an option.",0,"Multi/Single Select With Click")
return

onRowDeselectionHelp:
    a! = msgbox("If true, then rows will be deselected if you Ctrl+click the row. Normal behaviour with the grid disallows deselection of nodes, i.e. once a node is selected, it remains selected until another row is selected in its place.",0,"Row Deselection")
return

onSuppressRowClickSelectionHelp:
    a! = msgbox("If true, rows won't be selected when clicked. Use, for example, when you want checkbox selection and don't want to also select the row when clicked.",0,"Suppress Row Click Selection")
return

resize:
  ev! = BBjAPI().getLastEvent()
  w=ev!.getWidth()
  h=ev!.getHeight()
  grid!.setSize(w - 220,h - 40)
return

byebye:
bye