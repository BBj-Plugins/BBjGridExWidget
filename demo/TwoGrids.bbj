rem /**
rem  * This file is part of the BBjGridExWidget plugin.
rem  * (c) Basis Europe <eu@basis.com>
rem  *
rem  * For the full copyright and license information, please view the LICENSE
rem  * file that was distributed with this source code.
rem  */
use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidget
use com.basiscomponents.bc.SqlQueryBC
use com.basiscomponents.db.DataRow
use com.basiscomponents.db.ResultSet
use java.sql.Types

? 'HIDE'

declare auto BBjTopLevelWindow wnd!
declare auto BBjListButton lb_db!
declare auto BBjListButton lb_tbl!
declare auto BBjToolButton btn_fit!
declare BBjGridExWidget grid!

wnd! = BBjAPI().openSysGui("X0").addWindow(10,10,800,800,"Two Grids Demo")

grid! = new BBjGridExWidget(wnd!,100,0,0,800,290)
dtlgrid! = new BBjGridExWidget(wnd!,101,0,295,800,290)
recfield! = wnd!.addCEdit(200,10,610,780,180,"")

wnd!        .setCallback(BBjAPI.ON_CLOSE,"byebye")
wnd!        .setCallback(BBjAPI.ON_RESIZE,"resize")

gosub fillGrid

process_events


fillGrid:
    declare SqlQueryBC sbc!
    sbc! = new SqlQueryBC(BBjAPI().getJDBCConnection("ChileCompany"))
    rs! = sbc!.retrieve("SELECT  * FROM CUSTOMER")
    grid!.setData(rs!)

    grid!.setCallback(grid!.ON_GRID_SELECT_ROW(),"showDetails")
    grid!.getOptions().setMultipleSelection(1)

    dtlgrid!.setCallback(grid!.ON_GRID_SELECT_ROW(),"showRecord")
return

byebye:
    bye

resize:
    ev! = BBjAPI().getLastEvent()
    h=int((ev!.getHeight()-200)/2)-2
    grid!.setSize(ev!.getWidth(),h)
    dtlgrid!.setSize(ev!.getWidth(),h)
    dtlgrid!.setLocation(0,h+2)
return

showDetails:
    recs! = grid!.getSelectedRows()
    it! = recs!.iterator()
    cust$=""

    while it!.hasNext()
        r! = it!.next()
        rec! = r!.asDataRow()
        if cust$>"" then
            cust$=cust$+","
        fi
        cust$=cust$+"'"+rec!.getFieldAsString("CUST_NUM")+"'"
    wend

    if cust$>"" then
        sql$="SELECT  * FROM ORDER_HEADER WHERE CUST_NUM IN ("+cust$+")"
        dsbc! = new SqlQueryBC(BBjAPI().getJDBCConnection("ChileCompany"))
        drs! = dsbc!.retrieve(sql$)
        dtlgrid!.setData(drs!)
    else
        dtlgrid!.clearRowsData()
    fi


    recfield!.setText("")
return

showRecord:

    recs! = dtlgrid!.getSelectedRows()
    if recs!.size() >0 then
        rec! = recs!.get(0).asDataRow()
        txt$=str(rec!)
        txt$=txt$+$0a$+"----------------------"+$0a$
        txt$=txt$+str(rec!)
        recfield!.setText(txt$)
    else
        recfield!.setText("")
    fi

return