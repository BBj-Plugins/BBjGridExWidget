rem /**
rem  * This file is part of the BBjGridExWidget plugin.
rem  * (c) Basis Europe <eu@basis.com>
rem  *
rem  * For the full copyright and license information, please view the LICENSE
rem  * file that was distributed with this source code.
rem  */
use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidget
use com.basiscomponents.db.ResultSet
use com.basiscomponents.bc.SqlQueryBC

? 'HIDE'

declare auto BBjTopLevelWindow wnd!
declare BBjGridExWidget grid!

wnd! = BBjAPI().openSysGui("X0").addWindow(10,10,800,600,"Overlay Demo")
wnd!.setCallback(BBjAPI.ON_CLOSE,"byebye")
wnd!.setCallback(BBjAPI.ON_RESIZE,"resize")

showLoadingOverlay! = wnd!.addButton(200,10,10,150,25,"Loading Overlay")
showLoadingOverlay!.setCallback(BBjAPI.ON_BUTTON_PUSH,"onLoadingOverlay")

noRowsOverlay! = wnd!.addButton(201,160,10,150,25,"No Rows Overlay")
noRowsOverlay!.setCallback(BBjAPI.ON_BUTTON_PUSH,"onNoRowsOverlay")

hideOverlay! = wnd!.addButton(202,310,10,150,25,"Hide Overlay")
hideOverlay!.setCallback(BBjAPI.ON_BUTTON_PUSH,"onHideOverlay")

REM init the grid
grid! = new BBjGridExWidget(wnd!,100,0,50,800,550)
grid!.getOptions().setOverlayLoadingTemplate("<span class=""ag-overlay-loading-center"">Please wait while your rows are loading</span>")
grid!.getOptions().setOverlayNoRowsTemplate ("<span style=""padding: 10px; border: 2px solid #444; background: lightgoldenrodyellow;"">This is a custom 'no rows' overlay</span>")

gosub main
process_events

rem /**
rem  * Retrieve the data from the database and configure the grid
rem  */
main:
  declare SqlQueryBC sbc!
  declare ResultSet rs!
  
  sbc! = new SqlQueryBC(BBjAPI().getJDBCConnection("CDStore"))
  rs! = sbc!.retrieve("SELECT * FROM CDINVENTORY")
  grid!.setData(rs!)
return

rem /**
rem  * Show Loading overlay listener
rem  */
onLoadingOverlay:
    grid!.showLoadingOverlay()
return

rem /**
rem  * Show No Rows overlay listener
rem  */
onNoRowsOverlay:
    grid!.showNoRowsOverlay()
return

rem /**
rem  * Hide overlay listener
rem  */
onHideOverlay:
    grid!.hideOverlay()
return

rem /**
rem  * Listen to the BBjTopLevelWindow resize events and
rem  * resize the grid to fill the available space. 
rem  */
resize:
  ev! = BBjAPI().getLastEvent()
  w=ev!.getWidth()
  h=ev!.getHeight()
  grid!.setSize(w,h - 50)
return

rem /**
rem  * Close the demo
rem  */
byebye:
bye