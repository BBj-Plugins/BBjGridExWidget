rem /**
rem  * This file is part of the BBjGridExWidget plugin.
rem  * (c) Basis Europe <eu@basis.com>
rem  *
rem  * For the full copyright and license information, please view the LICENSE
rem  * file that was distributed with this source code.
rem  */
use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidget
use com.basiscomponents.db.ResultSet
use com.basiscomponents.bc.SqlQueryBC

? 'HIDE'

declare auto BBjTopLevelWindow wnd!
declare BBjGridExWidget grid!
declare SqlQueryBC sbc!
declare ResultSet rs!

wnd! = BBjAPI().openSysGui("X0").addWindow(10,10,820,600,"Columns Sizing Demo")
wnd!.setCallback(BBjAPI.ON_CLOSE,"byebye")
wnd!.setCallback(BBjAPI.ON_RESIZE,"resize")

sizeToFit! = wnd!.addButton(200,10,10,150,25,"Size To Fit")
sizeToFit!.setCallback(BBjAPI.ON_BUTTON_PUSH,"sizeToFit")

autoSizeAll! = wnd!.addButton(201,160,10,150,25,"Auto-size All")
autoSizeAll!.setCallback(BBjAPI.ON_BUTTON_PUSH,"autoSizeAll")

autoSizeTitle! = wnd!.addButton(202,310,10,200,25,"Auto-size (TITLE)")
autoSizeTitle!.setCallback(BBjAPI.ON_BUTTON_PUSH,"autoSizeTitle")

REM init the grid
grid! = new BBjGridExWidget(wnd!,100, 0,50,820,550)

gosub main
process_events

rem /**
rem  * Retrieve the data from the database and configure the grid based on result set metadata
rem  */
main:
  sbc! = new SqlQueryBC(BBjAPI().getJDBCConnection("CDStore"))
  rs! = sbc!.retrieve("SELECT * FROM CDINVENTORY")
  grid!.setData(rs!)
return

rem /**
rem  *  Make the currently visible columns fit the screen width
rem  */
sizeToFit:
  grid!.setFitToGrid()
return

rem /**
rem  * looks at the rendered cells on the screen, and works out
rem  * the width based on what it sees.
rem  */
autoSizeAll:
    grid!.autoSizeColumns()
return

rem /**
rem  * looks at the rendered TITLE column on the screen, and works out
rem  * the width of the column based on its content
rem  */
autoSizeTitle:
    rem it is not necessary to call setFitToGrid() , we call it here for the demo purpose only
    grid!.setFitToGrid()
    grid!.autoSizeColumns("TITLE")
return

rem /**
rem  * Listen to the BBjTopLevelWindow resize events and
rem  * resize the grid to fill the available space.
rem  */
resize:
  ev! = BBjAPI().getLastEvent()
  w=ev!.getWidth()
  h=ev!.getHeight()
  grid!.setSize(w,h)
return

rem /**
rem  * Close the demo
rem  */
byebye:
bye