rem /**
rem  * This file is part of the BBjGridExWidget plugin.
rem  * (c) Basis Europe <eu@basis.com>
rem  *
rem  * For the full copyright and license information, please view the LICENSE
rem  * file that was distributed with this source code.
rem  */
use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidget
use ::BBjGridExWidget/GxColumns.bbj::GxColumn
use com.basiscomponents.db.ResultSet
use com.basiscomponents.bc.SqlQueryBC

? 'HIDE'

declare auto BBjTopLevelWindow wnd!
declare BBjGridExWidget grid!

wnd! = BBjAPI().openSysGui("X0").addWindow(10,10,800,600,"Column Update Demo")
wnd!.setCallback(BBjAPI.ON_CLOSE,"byebye")
wnd!.setCallback(BBjAPI.ON_RESIZE,"resize")

onCDNumberUpdate! = wnd!.addButton(200,10,10,150,25,"Update CDNUMBER")
onCDNumberUpdate!.setCallback(BBjAPI.ON_BUTTON_PUSH,"onCDNumberUpdate")

groupByMusicType! = wnd!.addButton(201,160,10,150,25,"Group By Music Type")
groupByMusicType!.setCallback(BBjAPI.ON_BUTTON_PUSH,"onGroupByMusicType")

REM init the grid
grid! = new BBjGridExWidget(wnd!,100,0,50,800,550)

gosub main
process_events

rem /**
rem  * Retrieve the data from the database and configure the grid
rem  */
main:
  declare SqlQueryBC sbc!
  declare ResultSet rs!

  sbc! = new SqlQueryBC(BBjAPI().getJDBCConnection("CDStore"))
  rs! = sbc!.retrieve("SELECT CDNUMBER , TITLE , MUSICTYPE FROM CDINVENTORY")
  grid!.setData(rs!)
  grid!.setFitToGrid()
return

rem /**
rem  * Update the CDNUMBER colum definition
rem  */
onCDNumberUpdate:
    declare GxColumn column!

    column! = grid!.getColumn("CDNUMBER")
    column!.getCellClass().add("my-special-color")
    column!.getHeaderClass().add("my-special-color")
    column!.setSuppressSizeToFit(1)
    column!.setWidth(150)
    column!.setPinned(GxColumn.PINNED_LEFT())

    grid!.updateColumns()
    grid!.setFitToGrid()
    grid!.addStyle(".my-special-color", "{""background-color"": ""black"" , ""color"": ""#d8d8d8""}")
    grid!.redrawRows()
return

rem /**
rem  * Create group by music type
rem  */
onGroupByMusicType:
    group! = new BBjVector()
    group!.addItem("MUSICTYPE")
    grid!.addColumnGroup("Genre" , "Genre", group!)
    grid!.updateColumns()
return

rem /**
rem  * Listen to the BBjTopLevelWindow resize events and
rem  * resize the grid to fill the available space.
rem  */
resize:
  ev! = BBjAPI().getLastEvent()
  w=ev!.getWidth()
  h=ev!.getHeight()
  grid!.setSize(w,h - 50)
return

rem /**
rem  * Close the demo
rem  */
byebye:
bye