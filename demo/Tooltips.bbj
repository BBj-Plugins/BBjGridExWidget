rem /**
rem  * This file is part of the BBjGridExWidget plugin.
rem  * (c) Basis Europe <eu@basis.cloud>
rem  *
rem  * For the full copyright and license information, please view the LICENSE
rem  * file that was distributed with this source code.
rem  */
use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidget
use com.basiscomponents.db.ResultSet
use com.basiscomponents.bc.SqlQueryBC

? 'HIDE'

declare auto BBjTopLevelWindow wnd!
declare BBjGridExWidget grid!

wnd! = BBjAPI().openSysGui("X0").addWindow(10,10,800,600,"Tooltips Demo")
wnd!.setCallback(BBjAPI.ON_CLOSE,"byebye")
wnd!.setCallback(BBjAPI.ON_RESIZE,"resize")

REM init the grid
grid! = new BBjGridExWidget(wnd!,100,0,0,800,600)

gosub main
process_events

rem /**
rem  * Below shows an example using Tooltips. The following can be noted:
rem  *
rem  *  1. We disable browser tooltips to support HTML content in tooltips using
rem  *     the grid option `setEnableBrowserTooltips`.
rem  *
rem  *  2. We change the tooltip delay time to "0" using the grid option `setTooltipShowDelay`,
rem  *     so tooltips are displayed instantly. By default, once you hover an item, it will
rem  *     take 2000ms for the tooltip to be displayed.
rem  *
rem  *  3. The `CD Information` group has a tooltip set using the `setHeaderTooltip` method.
rem  *
rem  *  4. The `Title` column in the `CD Information` group has a tooltip expression set using
rem  *     the `setTooltipValueGetterExpression` method, which returns an HTML snippet
rem  *     to show more information about the title, like the artist and the playing time.
rem  *
rem  *      The parameters passed to the TooltipValueGetterExpression are as follows:
rem  *
rem  *      Parameter      | Description
rem  *      ==========     | ===================
rem  *      data           | Mapped from the DataRow
rem  *      column         | Current column
rem  *      getValue       | The value after it is processed by the ValueGetterExpression
rem  *      ctx            | The grid client context
rem  *      isHeader       | A boolean , when true , then the tooltip is for a column header
rem  *      isGroupHeader  | A boolean , when true , then the tooltip is for a group header
rem  *
rem  *  5. The Column `CDNUMBER` has a tooltip field set using the `setTooltipField` method.
rem  *     This option basically takes the value of the cell and puts it in a tooltip.
rem  *     Note that you can use the tooltip field to display the cell value of a different column too.
rem  */
main:
  declare SqlQueryBC sbc!
  declare ResultSet rs!

  sbc! = new SqlQueryBC(BBjAPI().getJDBCConnection("CDStore"))
  rs! = sbc!.retrieve("SELECT CDNUMBER , ARTIST, TITLE, LABEL, PLAYINGTIME, MUSICTYPE FROM CDINVENTORY")

  grid!.setData(rs! , 0 , 0)
  rem Note this option is false by default. We are setting it here just for the demo purpose.
  grid!.getOptions().setEnableBrowserTooltips(0)
  grid!.getOptions().setTooltipShowDelay(0)
  grid!.setTheme(grid!.GRID_THEME_ALPINE_DARK())
  grid!.setFitToGrid()

  group! = new BBjVector()
  group!.addItem("TITLE")
  group!.addItem("ARTIST")
  informationGroup! = grid!.addColumnGroup("Group_ID_1", "CD Information", group!, 1)
  informationGroup!.setHeaderTooltip("This group displays general information about the CD")

  titleColumn! = informationGroup!.getColumn("TITLE")
  titleDetailsExpression! = ""+
:       "if(data) {" +
:        "  return '<img src=""https://freesvg.org/img/Minduka_Music_icon.png"" style=""vertical-align:middle;width: 24px ; height: 24px; margin-right: 10px""/>' + "+
:        "         data.TITLE + "+
:        "         '<hr>' + "+
:        "         '<strong>Label        : </strong>' + data.LABEL       +  '<br><br>' + " +
:        "         '<strong>Artist       : </strong>' + data.ARTIST      +  '<br><br>' + "+
:        "         '<strong>Genre        : </strong>' + data.MUSICTYPE   +  '<br><br>' + "+
:        "         '<strong>Playing Time : </strong>' + data.PLAYINGTIME                 "+
:        "}"

  titleColumn!.setTooltipValueGetterExpression(titleDetailsExpression!)

  numberColumn! = grid!.addColumn("CDNUMBER")
  numberColumn!.setTooltipField("CDNUMBER")
  numberColumn!.setPinned("left")
return

rem /**
rem  * Listen to the BBjTopLevelWindow resize events and
rem  * resize the grid to fill the available space.
rem  */
resize:
  ev! = BBjAPI().getLastEvent()
  w=ev!.getWidth()
  h=ev!.getHeight()
  grid!.setSize(w,h)
return

rem /**
rem  * Close the demo
rem  */
byebye:
bye