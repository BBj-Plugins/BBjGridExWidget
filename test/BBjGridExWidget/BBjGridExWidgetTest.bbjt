rem /**
rem  * This file is part of the BBjGridExWidget plugin.
rem  * (c) Basis Europe <eu@basis.com>
rem  *
rem  * For the full copyright and license information, please view the LICENSE
rem  * file that was distributed with this source code.
rem  */

use ::BBjGridExWidget/test/Mocks/BBjGridExWidgetMock.bbj::BBjGridExWidgetMock
use com.google.gson.JsonObject
use com.google.gson.JsonParser
use java.util.regex.Pattern

class public BBjGridExWidgetTest

    field private BBjGridExWidgetMock Instance!
    
    rem @Before
    method public void setUp()
        #Instance! = new BBjGridExWidgetMock()
    methodend
    
    rem @Test    
    method public void testGetRoot()
        grid2! = new BBjGridExWidgetMock()
        grid3! = new BBjGridExWidgetMock()
        
        currentId! = #Instance!.getRootId()
        grid2Id!   = grid2!.getRootId()
        grid3Id!   = grid3!.getRootId()
            
        pattern! = "gx-grid-[0-9]+"
        
        Assert.Equals(Pattern.matches(pattern!,currentId!) , BBjAPI.TRUE)
        Assert.Equals(Pattern.matches(pattern!,grid2Id!) , BBjAPI.TRUE)
        Assert.Equals(Pattern.matches(pattern!,grid3Id!) , BBjAPI.TRUE)
        
        currentInstnaceNum! = num(currentId!.substring(currentId!.lastIndexOf("-") + 1))
        grid2InstanceNum!   = num(grid2Id!  .substring(grid2Id!  .lastIndexOf("-") + 1))
        grid3InstanceNum!   = num(grid3Id!  .substring(grid3Id!  .lastIndexOf("-") + 1))
        
        Assert.Equals(currentInstnaceNum! < grid2InstanceNum! , BBjAPI.TRUE)
        Assert.Equals(grid2InstanceNum! < grid3InstanceNum! , BBjAPI.TRUE) 
    methodend

    rem @Test
    method public void testIncludeClientRowDataInRowModels()
        Assert.Equals(#Instance!.getClientContext().has("includeClientRowData"),BBjAPI.FALSE)
        
        #Instance!.includeClientRowDataInRowModels(1)
        Assert.Equals(#Instance!.getClientContext().has("includeClientRowData"),BBjAPI.TRUE)
        Assert.Equals(#Instance!.getLastExecutedScript() , "")
        
        #Instance!.setIsReady(BBjAPI.TRUE)
        #Instance!.includeClientRowDataInRowModels(0)
        Assert.Equals(#Instance!.getClientContext().get("includeClientRowData").getAsBoolean(),BBjAPI.FALSE)
        Assert.Equals(#Instance!.getLastExecutedScript() <> "", BBjAPI.TRUE)
    methodend
    
    rem @Test
    method public void testExecuteScript()
        code! = "foo"
        #Instance!.executeScript(code!)
        Assert.Equals(#Instance!.getExecutor().getQueue().containsKey(code!) , BBjAPI.TRUE)
        
        code! = "bar"
        #Instance!.setIsReady(BBjAPI.TRUE)
        #Instance!.executeScript(code!)
        Assert.Equals(#Instance!.getExecutor().getQueue().containsKey(code!),BBjAPI.FALSE)
        Assert.Equals(#Instance!.getLastExecutedScript() , code!)
    methodend
    
    rem @Test
    method public void testSuppressBuiDebouncing()
        #Instance!.suppressBuiDebouncing(1)
        Assert.Equals(#Instance!.getExecutor().getSuppressBuiDebouncing() , 1)
        
        #Instance!.suppressBuiDebouncing(0)
        Assert.Equals(#Instance!.getExecutor().getSuppressBuiDebouncing() , 0)
    methodend
    
    rem @Test
    method public void testSuppressGuiDebouncing()
        #Instance!.suppressGuiDebouncing(1)
        Assert.Equals(#Instance!.getExecutor().getSuppressGuiDebouncing() , 1)
        
        #Instance!.suppressGuiDebouncing(0)
        Assert.Equals(#Instance!.getExecutor().getSuppressGuiDebouncing() , 0)
    methodend 
    
    rem @Test
    method public void testSuppressDebouncing()
        #Instance!.suppressDebouncing(1)
        Assert.Equals(#Instance!.getExecutor().getSuppressGuiDebouncing() , 1)
        Assert.Equals(#Instance!.getExecutor().getSuppressGuiDebouncing() , 1)
        
        #Instance!.suppressDebouncing(0)
        Assert.Equals(#Instance!.getExecutor().getSuppressGuiDebouncing() , 0)
        Assert.Equals(#Instance!.getExecutor().getSuppressGuiDebouncing() , 0)
    methodend        
    

    
    rem @After
    method public void tearDown()
        #Instance! = null()
    methodend

classend


