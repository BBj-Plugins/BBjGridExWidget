rem /**
rem  * This file is part of the BBjGridExWidget plugin.
rem  * (c) Basis Europe <eu@basis.com>
rem  *
rem  * For the full copyright and license information, please view the LICENSE
rem  * file that was distributed with this source code.
rem  */
use ::BBjGridExWidget/GxOptions.bbj::GxOptionsDateTime
use com.google.gson.JsonObject
use com.google.gson.JsonNull

class public GxOptionsDateTimeTest

    field private GxOptionsDateTime Instance!

    rem @Before
    method public void setUp()
        #Instance!  = new GxOptionsDateTime()
    methodend

    rem @Test
    method public void testCanSetEnableTime()
        declare auto JsonObject json!

        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeEnableTime").getAsBoolean(), BBjAPI.TRUE)

        #Instance!.setEnableTime(0)
        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeEnableTime").getAsBoolean(), BBjAPI.FALSE)
    methodend

    rem @Test
    method public void testCanSetEnable24HR()
        declare auto JsonObject json!

        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeEnable24HR").getAsBoolean(), BBjAPI.TRUE)

        #Instance!.setEnable24HR(0)
        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeEnable24HR").getAsBoolean(), BBjAPI.FALSE)
    methodend

    rem @Test
    method public void testSetEnable24HRValidatesHour()
        #Instance!.setDefaultHour(23)
        Assert.Expect(#Instance!.setEnable24HR(0) , 256)
    methodend    

    rem @Test
    method public void testCanSetEnableSeconds()
        declare auto JsonObject json!

        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeEnableSeconds").getAsBoolean(), BBjAPI.FALSE)

        #Instance!.setEnableSeconds(1)
        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeEnableSeconds").getAsBoolean(), BBjAPI.TRUE)
    methodend    

    rem @Test
    method public void testCanSetEnableCalendar()
        declare auto JsonObject json!

        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeEnableCalendar").getAsBoolean(), BBjAPI.TRUE)

        #Instance!.setEnableCalendar(0)
        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeEnableCalendar").getAsBoolean(), BBjAPI.FALSE)
    methodend      

    rem @Test
    method public void testCanSetDisableMobile()
        declare auto JsonObject json!

        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeDisableMobile").getAsBoolean(), BBjAPI.TRUE)

        #Instance!.setDisableMobile(0)
        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeDisableMobile").getAsBoolean(), BBjAPI.FALSE)
    methodend 
    
    rem @Test
    method public void testCanSetEnableWeekNumber()
        declare auto JsonObject json!

        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeEnableWeekNumber").getAsBoolean(), BBjAPI.FALSE)

        #Instance!.setEnableWeekNumber(1)
        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeEnableWeekNumber").getAsBoolean(), BBjAPI.TRUE)
    methodend 
    
    rem @Test
    method public void testCanSetMask()
        declare auto JsonObject json!

        json! = #Instance!.getAsJsonObject()
        Assert.Equals(len(json!.get("dateTimeMask").getAsString()) > 0 , BBjAPI.TRUE)

        #Instance!.setMask("%Y")
        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeMask").getAsString(), "%Y")
    methodend  
    
    rem @Test
    method public void testCanSetDefaultHour()
        declare auto JsonObject json!

        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeDefaultHour").getAsString() , "12")

        #Instance!.setDefaultHour(13)
        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeDefaultHour").getAsString(), "13")
    methodend     

    rem @Test
    method public void testSetDefaultHourValidatesHour()
        #Instance!.setEnable24HR(1)
        Assert.Expect(#Instance!.setDefaultHour(500) , 256)

        #Instance!.setEnable24HR(0)
        Assert.Expect(#Instance!.setDefaultHour(-50) , 256)
    methodend  

    rem @Test
    method public void testCanSetDefaultMinutes()
        declare auto JsonObject json!

        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeDefaultMinute").getAsString() , "0")

        #Instance!.setDefaultMinute(50)
        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeDefaultMinute").getAsString(), "50")
    methodend  
    
    rem @Test
    method public void testSetDefaultMinutesValidateMinute()
        Assert.Expect(#Instance!.setDefaultMinute(-100) , 256)
        Assert.Expect(#Instance!.setDefaultMinute(+100) , 256)
    methodend      

    rem @Test
    method public void testCanSetMax()
        declare auto JsonObject json!

        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeMax").equals(new JsonNull()) , BBjAPI.TRUE)

        #Instance!.setMax("2010-10-10")
        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeMax").getAsString(), "2010-10-10")
    methodend   

    rem @Test
    method public void testCanSetMin()
        declare auto JsonObject json!

        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeMin").equals(new JsonNull()) , BBjAPI.TRUE)

        #Instance!.setMin("2010-10-10")
        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeMin").getAsString(), "2010-10-10")
    methodend  

    rem @Test
    method public void testCanSetLocale()
        declare auto JsonObject json!

        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeLocale").equals(new JsonNull()) , BBjAPI.TRUE)

        #Instance!.setLocale("de")
        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeLocale").getAsString(), "de")
    methodend  

    rem @Test
    method public void testCanSetExpression()
        declare auto JsonObject json!

        json! = #Instance!.getAsJsonObject()
        Assert.IsNull(json!.get("dateTimeFormatter"))

        #Instance!.setFormatterExpression("x")
        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("dateTimeFormatter").getAsString(), "x")
    methodend      
        
    rem @After
    method public void tearDown()
        #Instance! = null()
    methodend

classend
