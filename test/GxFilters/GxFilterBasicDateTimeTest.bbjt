rem /**
rem  * This file is part of the BBjGridExWidget plugin.
rem  * (c) Basis Europe <eu@basis.com>
rem  *
rem  * For the full copyright and license information, please view the LICENSE
rem  * file that was distributed with this source code.
rem  */
use ::BBjGridExWidget/GxFilters.bbj::GxFilterBasicDateTime
use com.google.gson.JsonObject
use com.google.gson.JsonNull

class public GxFilterBasicDateTimeTest

    field private GxFilterBasicDateTime Instance!
    
    rem @Before
    method public void setUp()
        #Instance! = new GxFilterBasicDateTime()
    methodend

    rem @Test
    method public void testFilterNameIsSet()
        Assert.Equals(#Instance!.getFilterName(), "DateTimeFilter")
    methodend
    
    rem @Test
    method public void testCanConstructWithMask()
        mask! = "my mask"
        obj! = new GxFilterBasicDateTime(mask!); rem this is not valid dateTime mask
        Assert.Equals(obj!.getMask() , mask!)
    methodend
    
    rem @Test
    method public void testCanSetApplyButton()
        declare auto JsonObject json!

        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("applyButton").getAsBoolean() , BBjAPI.FALSE)

        #Instance!.setApplyButton(1)
        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("applyButton").getAsBoolean() , BBjAPI.TRUE)
    methodend

    rem @Test
    method public void testCanSetClearButton()
        declare auto JsonObject json!

        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("clearButton").getAsBoolean() , BBjAPI.FALSE)

        #Instance!.setClearButton(1)
        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("clearButton").getAsBoolean() , BBjAPI.TRUE)
    methodend  
    
    rem @Test
    method public void testCanSetResetButton()
        declare auto JsonObject json!

        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("resetButton").getAsBoolean() , BBjAPI.FALSE)

        #Instance!.setRestButton(1)
        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("resetButton").getAsBoolean() , BBjAPI.TRUE)
    methodend  
    
    rem @Test
    method public void testCanSetSuppressAndOrCondition()
        declare auto JsonObject json!

        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("suppressAndOrCondition").getAsBoolean() , BBjAPI.FALSE)

        #Instance!.setSuppressAndOrCondition(1)
        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("suppressAndOrCondition").getAsBoolean() , BBjAPI.TRUE)
    methodend  
    
    rem @Test
    method public void testCanSetDefaultOptions()
        declare auto JsonObject json!

        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.has("defaultOption") , BBjAPI.TRUE)

        #Instance!.setDefaultOption("contains")
        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("defaultOption").getAsString() , "contains")
    methodend 
    
    rem @Test
    method public void testCanSetFilterOptions()
        declare auto JsonObject json!

        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("filterOptions").equals(new JsonNull()) , BBjAPI.TRUE)

        #Instance!.getFilterOptions().add("startsWith")
        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("filterOptions").getAsJsonArray().equals(#Instance!.getFilterOptions()),BBjAPI.TRUE)
    methodend   
    
    rem @Test
    method public void testCanSetInRangeInclusive()
        declare auto JsonObject json!

        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("inRangeInclusive").getAsBoolean(), BBjAPI.TRUE)

        #Instance!.setInRangeInclusive(0)
        json! = #Instance!.getAsJsonObject()
        Assert.Equals(json!.get("inRangeInclusive").getAsBoolean(), BBjAPI.FALSE)
    methodend
   
    rem @After
    method public void tearDown()
        #Instance! = null()
    methodend

classend
